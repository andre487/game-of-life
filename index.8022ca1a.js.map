{"mappings":"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","sources":["<anon>","src/index.ts","src/controls-view.ts","src/game.ts","src/utils.ts","src/life-map.ts","src/map-view.ts","src/messages-view.ts","src/save-game-controller.ts"],"sourcesContent":["class $04410b3b959a494a$export$f7a70f5f17339408 extends Error {\n    constructor(message){\n        super(message);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nfunction $04410b3b959a494a$export$d29f2533ab4f8bcf() {\n    return Object.create(null);\n}\nfunction $04410b3b959a494a$export$848feb93d8f32b9b(func) {\n    try {\n        func();\n    } catch (e) {\n        window.reportError(e);\n    }\n}\nfunction $04410b3b959a494a$export$8b1ffc2729584f1c(cb, ...args) {\n    setTimeout(()=>cb(...args), 0);\n}\nfunction $04410b3b959a494a$export$7cf43de860abed3c(cb) {\n    function loadCb() {\n        $04410b3b959a494a$export$8b1ffc2729584f1c(cb);\n        document.removeEventListener(\"DOMContentLoaded\", loadCb);\n        window.removeEventListener(\"load\", loadCb);\n    }\n    if (document.readyState === \"interactive\" || document.readyState === \"complete\") return loadCb();\n    document.addEventListener(\"DOMContentLoaded\", loadCb);\n    window.addEventListener(\"load\", loadCb);\n}\nfunction $04410b3b959a494a$export$8bf7aba4a9e09055(errorMessage, ErrCls = Error) {\n    throw new ErrCls(errorMessage);\n}\nfunction $04410b3b959a494a$export$1a59691a1efaf7b9(ErrCls) {\n    return function(errorMessage) {\n        $04410b3b959a494a$export$8bf7aba4a9e09055(errorMessage, ErrCls);\n    };\n}\nfunction $04410b3b959a494a$export$c12749b4e5ec3bbb(val, max) {\n    let res = BigInt(val);\n    const bigMax = BigInt(max);\n    if (res < 0n) res = bigMax + res;\n    else if (res >= bigMax) res = res % bigMax;\n    return res;\n}\n\n\nvar $6e33178611e38e36$export$f2555f7082964729;\n(function(GameOfLifeState) {\n    GameOfLifeState[\"Stopped\"] = \"Stopped\";\n    GameOfLifeState[\"Running\"] = \"Running\";\n    GameOfLifeState[\"Stopping\"] = \"Stopping\";\n    GameOfLifeState[\"Completed\"] = \"Completed\";\n})($6e33178611e38e36$export$f2555f7082964729 || ($6e33178611e38e36$export$f2555f7082964729 = {}));\nclass $6e33178611e38e36$export$8981e2cb2c3fa123 {\n    constructor(lifeMap){\n        this._stopFlag = false;\n        this._startCallbacks = [];\n        this._stopCallbacks = [];\n        this._roundCallbacks = [];\n        this._state = $6e33178611e38e36$export$f2555f7082964729.Stopped;\n        this._runRoundAsync = (done)=>{\n            const populated = this._lifeMap.populatedRect;\n            const changesTable = (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)();\n            const walkByColumn = (bigI)=>{\n                let bigJ = populated.left;\n                makeStep();\n                function makeStep() {\n                    handleCell(bigI, bigJ);\n                    ++bigJ;\n                    if (bigJ <= populated.right) makeStep();\n                    else {\n                        ++bigI;\n                        if (bigI <= populated.bottom) (0, $04410b3b959a494a$export$8b1ffc2729584f1c)(walkByColumn, bigI);\n                        else done(changesTable);\n                    }\n                }\n            };\n            const handleCell = (bigX, bigY)=>{\n                const state = this._lifeMap.isAlive(bigX, bigY);\n                let aliveSiblings = 0;\n                for(let i = -1; i <= 1; ++i){\n                    for(let j = -1; j <= 1; ++j)if (!(i === 0 && j === 0)) {\n                        const curI = bigX + BigInt(i);\n                        const curJ = bigY + BigInt(j);\n                        aliveSiblings += this._lifeMap.isAlive(curI, curJ) ? 1 : 0;\n                    }\n                }\n                const keyX = bigX.toString();\n                const keyY = bigY.toString();\n                if (state && !(aliveSiblings === 2 || aliveSiblings === 3)) {\n                    changesTable[keyX] ??= (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)();\n                    changesTable[keyX][keyY] = false;\n                } else if (!state && aliveSiblings === 3) {\n                    changesTable[keyX] ??= (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)();\n                    changesTable[keyX][keyY] = true;\n                }\n            };\n            (0, $04410b3b959a494a$export$8b1ffc2729584f1c)(walkByColumn, populated.top);\n        };\n        this._lifeMap = lifeMap;\n    }\n    get state() {\n        return this._state;\n    }\n    onStart(cb) {\n        this._startCallbacks.push(cb);\n    }\n    onStop(cb) {\n        this._stopCallbacks.push(cb);\n    }\n    onRound(cb) {\n        this._roundCallbacks.push(cb);\n    }\n    stop() {\n        this._stopFlag = true;\n        this._state = $6e33178611e38e36$export$f2555f7082964729.Stopping;\n    }\n    run() {\n        const onRoundComplete = (changesTable)=>{\n            let changed = false;\n            for (const [keyX, yVector] of Object.entries(changesTable))for (const [keyY, state] of Object.entries(yVector)){\n                this._lifeMap.isAlive(keyX, keyY, state);\n                changed = true;\n            }\n            (0, $04410b3b959a494a$export$8b1ffc2729584f1c)(()=>{\n                this._roundCallbacks.forEach((0, $04410b3b959a494a$export$848feb93d8f32b9b));\n            });\n            if (!changed) {\n                this._state = $6e33178611e38e36$export$f2555f7082964729.Completed;\n                (0, $04410b3b959a494a$export$8b1ffc2729584f1c)(()=>{\n                    this._stopCallbacks.forEach((0, $04410b3b959a494a$export$848feb93d8f32b9b));\n                });\n            } else if (this._stopFlag) {\n                this._state = $6e33178611e38e36$export$f2555f7082964729.Stopped;\n                (0, $04410b3b959a494a$export$8b1ffc2729584f1c)(()=>{\n                    this._stopCallbacks.forEach((0, $04410b3b959a494a$export$848feb93d8f32b9b));\n                });\n            } else makeRound();\n        };\n        const makeRound = ()=>{\n            (0, $04410b3b959a494a$export$8b1ffc2729584f1c)(this._runRoundAsync, onRoundComplete);\n        };\n        this._stopFlag = false;\n        makeRound();\n        this._state = $6e33178611e38e36$export$f2555f7082964729.Running;\n        (0, $04410b3b959a494a$export$8b1ffc2729584f1c)(()=>{\n            this._startCallbacks.forEach((0, $04410b3b959a494a$export$848feb93d8f32b9b));\n        });\n    }\n}\n\n\n\nclass $9935fb0976009b53$export$4e5402614c278aa0 extends (0, $04410b3b959a494a$export$f7a70f5f17339408) {\n}\nconst $9935fb0976009b53$var$thr = (0, $04410b3b959a494a$export$1a59691a1efaf7b9)($9935fb0976009b53$export$4e5402614c278aa0);\nclass $9935fb0976009b53$export$73d419e4fd660e9b {\n    constructor(game, saveGameController, messagesView){\n        this._game = game;\n        this._saveGameController = saveGameController;\n        this._messagesView = messagesView;\n        this._startButton = document.getElementById(\"start\") ?? $9935fb0976009b53$var$thr(\"Button not found\");\n        this._stopButton = document.getElementById(\"stop\") ?? $9935fb0976009b53$var$thr(\"Button not found\");\n        this._saveButton = document.getElementById(\"save\") ?? $9935fb0976009b53$var$thr(\"Button not found\");\n        this._loadButton = document.getElementById(\"load\") ?? $9935fb0976009b53$var$thr(\"Button not found\");\n    }\n    init() {\n        this._game.onStart(()=>{\n            this._startButton.setAttribute(\"disabled\", \"\");\n            this._stopButton.removeAttribute(\"disabled\");\n            this._loadButton.setAttribute(\"disabled\", \"\");\n        });\n        this._game.onStop(()=>{\n            this._stopButton.setAttribute(\"disabled\", \"\");\n            this._startButton.removeAttribute(\"disabled\");\n            if (this._saveGameController.doesSaveExist()) this._loadButton.removeAttribute(\"disabled\");\n            if (this._game.state === (0, $6e33178611e38e36$export$f2555f7082964729).Completed) this._messagesView.showMessage(\"The game is completed!\");\n        });\n        this._startButton.onclick = ()=>{\n            this._game.run();\n        };\n        this._stopButton.onclick = ()=>{\n            this._game.stop();\n        };\n        this._saveButton.onclick = ()=>{\n            this._saveGameController.save();\n        };\n        this._loadButton.onclick = ()=>{\n            this._saveGameController.load();\n        };\n        if (this._saveGameController.doesSaveExist()) {\n            this._loadButton.removeAttribute(\"disabled\");\n            this._messagesView.showMessage(\"You have a saved game\");\n        }\n    }\n}\n\n\n\n\nclass $f22807430230dcbd$export$3f79031f6bd0d508 extends (0, $04410b3b959a494a$export$f7a70f5f17339408) {\n}\nclass $f22807430230dcbd$export$ed3ad1bc61bbbf61 {\n    constructor(mapWidth, mapHeight){\n        this._container = (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)();\n        this._width = BigInt(mapWidth);\n        this._height = BigInt(mapHeight);\n        this._minX = this._height - 1n;\n        this._maxX = 0n;\n        this._minY = this._width - 1n;\n        this._maxY = 0n;\n        this._changeListeners = [];\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get populatedRect() {\n        return {\n            left: this._minX,\n            right: this._maxX,\n            top: this._minY,\n            bottom: this._maxY\n        };\n    }\n    get container() {\n        return this._container;\n    }\n    isAlive(x, y, status) {\n        const bigX = (0, $04410b3b959a494a$export$c12749b4e5ec3bbb)(x, this._width);\n        const bigY = (0, $04410b3b959a494a$export$c12749b4e5ec3bbb)(y, this._height);\n        if (status !== undefined) this._setStatusToContainer(bigX, bigY, status);\n        const keyX = bigX.toString();\n        const keyY = bigY.toString();\n        return Boolean(this._container[keyX]?.[keyY]);\n    }\n    addChangeListener(listener) {\n        if (this._changeListeners.indexOf(listener) === -1) this._changeListeners.push(listener);\n    }\n    serialize() {\n        const data = [\n            this._width,\n            this._height,\n            this._minX,\n            this._maxX,\n            this._minY,\n            this._maxY\n        ];\n        const coords = [];\n        for (const [keyX, vector] of Object.entries(this._container))coords.push(`${keyX}:${Object.keys(vector).join(\",\")}`);\n        data.push(coords.join(\"|\"));\n        return data.join(\";\");\n    }\n    loadSerializedState(dump) {\n        const data = dump.split(\";\");\n        if (data.length < 7) throw new $f22807430230dcbd$export$3f79031f6bd0d508(\"Invalid save data length\");\n        this._width = BigInt(data[0]);\n        this._height = BigInt(data[1]);\n        this._minX = BigInt(data[2]);\n        this._maxX = BigInt(data[3]);\n        this._minY = BigInt(data[4]);\n        this._maxY = BigInt(data[5]);\n        const container = (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)();\n        for (const coordData of data[6].split(\"|\")){\n            const [keyX, yStr] = coordData.split(\":\");\n            container[keyX] = (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)();\n            for (const keyY of yStr.split(\",\"))container[keyX][keyY] = true;\n        }\n        this._container = container;\n        this._changeListeners.forEach((0, $04410b3b959a494a$export$848feb93d8f32b9b));\n    }\n    _setStatusToContainer(bigX, bigY, status) {\n        if (bigX >= this._width || bigX < 0n || bigY >= this._height || bigY < 0n) return;\n        const keyX = bigX.toString();\n        const keyY = bigY.toString();\n        if (status) {\n            this._container[keyX] ??= (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)();\n            this._container[keyX][keyY] = true;\n        } else if (!status && this._container[keyX]) {\n            delete this._container[keyX][keyY];\n            if (Object.keys(this._container[keyX]).length === 0) delete this._container[keyX];\n        }\n        if (!status) return;\n        if (bigX - $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA < this._minX) {\n            this._minX = bigX - $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA;\n            if (this._minX < 0n) this._minX = 0n;\n        }\n        if (bigX + $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA > this._maxX) {\n            this._maxX = bigX + $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA;\n            if (this._maxX >= this._width) this._maxX = this._width - 1n;\n        }\n        if (bigY - $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA < this._minY) {\n            this._minY = bigY - $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA;\n            if (this._minY < 0n) this._minY = 0n;\n        }\n        if (bigY + $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA >= this._maxY) {\n            this._maxY = bigY + $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA;\n            if (this._maxY >= this._height) this._maxY = this._height - 1n;\n        }\n    }\n}\n$f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA = 30n;\n\n\n\nclass $4178208286d7fe59$export$a660f75ebdcef0d9 extends (0, $04410b3b959a494a$export$f7a70f5f17339408) {\n}\nconst $4178208286d7fe59$var$thr = (0, $04410b3b959a494a$export$1a59691a1efaf7b9)($4178208286d7fe59$export$a660f75ebdcef0d9);\nvar $4178208286d7fe59$export$e83a796c10cd0c8d;\n(function(MapViewState) {\n    MapViewState[\"Initial\"] = \"Initial\";\n    MapViewState[\"Rendered\"] = \"Rendered\";\n    MapViewState[\"Input\"] = \"Input\";\n    MapViewState[\"Life\"] = \"Life\";\n})($4178208286d7fe59$export$e83a796c10cd0c8d || ($4178208286d7fe59$export$e83a796c10cd0c8d = {}));\nclass $4178208286d7fe59$export$ab1e7a67d6ec5ad8 {\n    constructor(lifeMap){\n        this._state = $4178208286d7fe59$export$e83a796c10cd0c8d.Initial;\n        this._cellsByHorizontal = 0;\n        this._cellsByVertical = 0;\n        this._cellsHorizontalOffset = 0n;\n        this._cellsVerticalOffset = 0n;\n        this._curFrameRequest = null;\n        this.render = ()=>{\n            this._ctx.clearRect(0, 0, this._canvasWidth, this._canvasHeight);\n            let i = this._cellsVerticalOffset;\n            const M = i + BigInt(this._cellsByVertical);\n            for(; i < M; ++i){\n                let j = this._cellsHorizontalOffset;\n                const N = j + BigInt(this._cellsByHorizontal);\n                for(; j < N; ++j)this._setCellState(i, j, this._lifeMap.isAlive(i, j));\n            }\n            if (this._state !== $4178208286d7fe59$export$e83a796c10cd0c8d.Input) this._state = $4178208286d7fe59$export$e83a796c10cd0c8d.Rendered;\n        };\n        this.renderWhenFrame = ()=>{\n            if (this._curFrameRequest) {\n                cancelAnimationFrame(this._curFrameRequest);\n                console.warn(\"Skip render frame\");\n            }\n            this._curFrameRequest = requestAnimationFrame(()=>{\n                this._curFrameRequest = null;\n                this.render();\n            });\n        };\n        this.beginInput = ()=>{\n            if (this._state !== $4178208286d7fe59$export$e83a796c10cd0c8d.Rendered) throw new Error(\"Input is not available\");\n            this._state = $4178208286d7fe59$export$e83a796c10cd0c8d.Input;\n            this._canvas.addEventListener(\"click\", this._inputListener);\n        };\n        this.endInput = ()=>{\n            if (this._state !== $4178208286d7fe59$export$e83a796c10cd0c8d.Input) throw new $4178208286d7fe59$export$a660f75ebdcef0d9(\"Input is not available\");\n            this._state = $4178208286d7fe59$export$e83a796c10cd0c8d.Rendered;\n            this._canvas.removeEventListener(\"click\", this._inputListener);\n        };\n        this._inputListener = (event)=>{\n            if (this._state !== $4178208286d7fe59$export$e83a796c10cd0c8d.Input) throw new $4178208286d7fe59$export$a660f75ebdcef0d9(\"The map not into INPUT state\");\n            const cell = this._getCellByClientCoordinates(event.clientX, event.clientY);\n            this._toggleCellState(cell.top, cell.left);\n        };\n        this._lifeMap = lifeMap;\n        this._canvas = document.getElementById(\"map\") ?? $4178208286d7fe59$var$thr(\"Canvas not found\");\n        this._canvasRect = this._canvas.getBoundingClientRect();\n        this._canvasWidth = this._canvas.clientWidth;\n        this._canvasHeight = this._canvas.clientHeight;\n        this._ctx = this._canvas.getContext(\"2d\") ?? $4178208286d7fe59$var$thr(\"Failed to create context\");\n        this._ctx.fillStyle = \"#708090\";\n        this._ctx.strokeStyle = \"#e6e6fa\";\n        this._initMapData();\n        this._lifeMap.addChangeListener(()=>{\n            this._initMapData();\n            this.render();\n        });\n    }\n    _initMapData() {\n        this._cellsByHorizontal = Math.floor(this._canvasWidth / $4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_WIDTH);\n        if (this._cellsByHorizontal > this._lifeMap.width) throw new $4178208286d7fe59$export$a660f75ebdcef0d9(\"Map width is too low\");\n        this._cellsByVertical = Math.floor(this._canvasHeight / $4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_HEIGHT);\n        if (this._cellsByVertical > this._lifeMap.height) throw new $4178208286d7fe59$export$a660f75ebdcef0d9(\"Map height is too low\");\n        this._cellsHorizontalOffset = (this._lifeMap.width - BigInt(this._cellsByHorizontal)) / 2n;\n        this._cellsVerticalOffset = (this._lifeMap.height - BigInt(this._cellsByVertical)) / 2n;\n    }\n    _getCellByClientCoordinates(clientX, clientY) {\n        const curVerticalOffset = BigInt(Math.trunc((clientY - this._canvasRect.top) / $4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_HEIGHT));\n        const curHorizontalOffset = BigInt(Math.trunc((clientX - this._canvasRect.left) / $4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_WIDTH));\n        return {\n            top: this._cellsVerticalOffset + curVerticalOffset,\n            left: this._cellsHorizontalOffset + curHorizontalOffset\n        };\n    }\n    _toggleCellState(i, j) {\n        const isAlive = !this._lifeMap.isAlive(i, j);\n        this._setCellState(i, j, isAlive);\n    }\n    _setCellState(i, j, isAlive) {\n        this._lifeMap.isAlive(i, j, isAlive);\n        const x = Number(j - this._cellsHorizontalOffset) * $4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_WIDTH;\n        const y = Number(i - this._cellsVerticalOffset) * $4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_HEIGHT;\n        if (isAlive) this._ctx.fillRect(x, y, $4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_WIDTH, $4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_HEIGHT);\n        else {\n            this._ctx.clearRect(x, y, $4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_WIDTH, $4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_HEIGHT);\n            this._ctx.strokeRect(x, y, $4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_WIDTH, $4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_HEIGHT);\n        }\n    }\n}\n$4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_WIDTH = 10;\n$4178208286d7fe59$export$ab1e7a67d6ec5ad8.CELL_HEIGHT = 10;\n\n\nclass $054b22ee4f1298ef$export$ca6507f6a8b25a1d {\n    constructor(){\n        this._container = document.createElement(\"div\");\n        this._container.className = \"messages-container\";\n        document.body.appendChild(this._container);\n    }\n    showMessage(message, className) {\n        className = className ?? \"info\";\n        const block = document.createElement(\"div\");\n        const closeButton = document.createElement(\"span\");\n        block.classList.add(\"message\");\n        block.classList.add(className);\n        block.innerHTML = message;\n        closeButton.className = \"close\";\n        closeButton.innerHTML = \"&times;\";\n        block.appendChild(closeButton);\n        this._container.appendChild(block);\n        const closeMessage = ()=>{\n            this._container.removeChild(block);\n            closeButton.onclick = null;\n        };\n        const closeTimeout = setTimeout(closeMessage, $054b22ee4f1298ef$export$ca6507f6a8b25a1d.LIFE_TIME);\n        closeButton.onclick = function() {\n            clearTimeout(closeTimeout);\n            closeMessage();\n            return false;\n        };\n    }\n    showError(message) {\n        this.showMessage(message, \"error\");\n    }\n    bindToErrors() {\n        window.addEventListener(\"error\", (event)=>{\n            this.showError(`An error has occurred: ${event.error}`);\n        });\n        window.addEventListener(\"unhandledrejection\", (event)=>{\n            this.showError(`An error has occurred: ${event.reason}`);\n        });\n    }\n}\n$054b22ee4f1298ef$export$ca6507f6a8b25a1d.LIFE_TIME = 10000;\n\n\nclass $f2e1af450a1a0fc7$export$f3625401589af144 {\n    constructor(lifeMap){\n        this._lifeMap = lifeMap;\n    }\n    save() {\n        window.localStorage.save = this._lifeMap.serialize();\n    }\n    load() {\n        if (this.doesSaveExist()) {\n            const dump = window.localStorage.save;\n            this._lifeMap.loadSerializedState(dump);\n        }\n    }\n    doesSaveExist() {\n        const dump = window.localStorage.save;\n        return Boolean(dump);\n    }\n}\n\n\n\n// const UNIVERSE_SIZE = 2n ** 64n;\nconst $f27a99974ce68c5f$var$UNIVERSE_SIZE = 1024n;\n(0, $04410b3b959a494a$export$7cf43de860abed3c)(function() {\n    const messagesView = new (0, $054b22ee4f1298ef$export$ca6507f6a8b25a1d)();\n    messagesView.bindToErrors();\n    const lifeMap = new (0, $f22807430230dcbd$export$ed3ad1bc61bbbf61)($f27a99974ce68c5f$var$UNIVERSE_SIZE, $f27a99974ce68c5f$var$UNIVERSE_SIZE);\n    const mapView = new (0, $4178208286d7fe59$export$ab1e7a67d6ec5ad8)(lifeMap);\n    const game = new (0, $6e33178611e38e36$export$8981e2cb2c3fa123)(lifeMap);\n    const saveGameController = new (0, $f2e1af450a1a0fc7$export$f3625401589af144)(lifeMap);\n    const controlsView = new (0, $9935fb0976009b53$export$73d419e4fd660e9b)(game, saveGameController, messagesView);\n    game.onStart(mapView.endInput);\n    game.onStop(mapView.beginInput);\n    game.onRound(mapView.renderWhenFrame);\n    mapView.render();\n    mapView.beginInput();\n    controlsView.init();\n    console.log(\"Game is ready!\");\n});\n\n\n//# sourceMappingURL=index.8022ca1a.js.map\n","import {ControlsView} from './controls-view';\nimport {GameOfLife} from './game';\nimport {LifeMap} from './life-map';\nimport {MapView} from './map-view';\nimport {MessagesView} from './messages-view';\nimport {SaveGameController} from './save-game-controller';\nimport {onPageReady} from './utils';\n\n// const UNIVERSE_SIZE = 2n ** 64n;\nconst UNIVERSE_SIZE = 1024n;\n\nonPageReady(function() {\n    const messagesView = new MessagesView();\n    messagesView.bindToErrors();\n\n    const lifeMap = new LifeMap(UNIVERSE_SIZE, UNIVERSE_SIZE);\n    const mapView = new MapView(lifeMap);\n    const game = new GameOfLife(lifeMap);\n    const saveGameController = new SaveGameController(lifeMap);\n    const controlsView = new ControlsView(game, saveGameController, messagesView);\n\n    game.onStart(mapView.endInput);\n    game.onStop(mapView.beginInput);\n    game.onRound(mapView.renderWhenFrame);\n\n    mapView.render();\n    mapView.beginInput();\n    controlsView.init();\n\n    console.log('Game is ready!');\n});\n","import type {U} from 'ts-toolbelt';\nimport {GameOfLife, GameOfLifeState} from './game';\nimport {MessagesView} from './messages-view';\nimport {SaveGameController} from './save-game-controller';\nimport {createErrorThrower, CustomError} from './utils';\n\nexport class ControlsViewError extends CustomError {}\n\nconst thr = createErrorThrower(ControlsViewError);\n\ntype MaybeButton = U.Nullable<HTMLButtonElement>;\n\nexport class ControlsView {\n    private _game: GameOfLife;\n    private _startButton: HTMLButtonElement;\n    private _stopButton: HTMLButtonElement;\n    private _saveButton: HTMLButtonElement;\n    private _loadButton: HTMLButtonElement;\n    private _saveGameController: SaveGameController;\n    private _messagesView: MessagesView;\n\n    constructor(game: GameOfLife, saveGameController: SaveGameController, messagesView: MessagesView) {\n        this._game = game;\n        this._saveGameController = saveGameController;\n        this._messagesView = messagesView;\n\n        this._startButton = document.getElementById('start') as MaybeButton ?? thr('Button not found');\n        this._stopButton = document.getElementById('stop') as MaybeButton ?? thr('Button not found');\n        this._saveButton = document.getElementById('save') as MaybeButton ?? thr('Button not found');\n        this._loadButton = document.getElementById('load') as MaybeButton ?? thr('Button not found');\n    }\n\n    init() {\n        this._game.onStart(() => {\n            this._startButton.setAttribute('disabled', '');\n            this._stopButton.removeAttribute('disabled');\n            this._loadButton.setAttribute('disabled', '');\n        });\n\n        this._game.onStop(() => {\n            this._stopButton.setAttribute('disabled', '');\n            this._startButton.removeAttribute('disabled');\n            if (this._saveGameController.doesSaveExist()) {\n                this._loadButton.removeAttribute('disabled');\n            }\n            if (this._game.state === GameOfLifeState.Completed) {\n                this._messagesView.showMessage('The game is completed!');\n            }\n        });\n\n        this._startButton.onclick = () => {\n            this._game.run();\n        };\n\n        this._stopButton.onclick = () => {\n            this._game.stop();\n        };\n\n        this._saveButton.onclick = () => {\n            this._saveGameController.save();\n        };\n\n        this._loadButton.onclick = () => {\n            this._saveGameController.load();\n        };\n\n        if (this._saveGameController.doesSaveExist()) {\n            this._loadButton.removeAttribute('disabled');\n            this._messagesView.showMessage('You have a saved game');\n        }\n    }\n}\n","import type {GeneralCallback, SimpleCallback} from './common-types';\nimport type {CoordMatrix, CoordVector} from './life-map';\nimport {LifeMap} from './life-map';\nimport {call, obj, onNextTick} from './utils';\n\nexport enum GameOfLifeState {\n    Stopped = 'Stopped',\n    Running = 'Running',\n    Stopping = 'Stopping',\n    Completed = 'Completed',\n}\n\nexport class GameOfLife {\n    private _lifeMap: LifeMap;\n    private _stopFlag = false;\n    private _startCallbacks: SimpleCallback[] = [];\n    private _stopCallbacks: SimpleCallback[] = [];\n    private _roundCallbacks: SimpleCallback[] = [];\n    private _state = GameOfLifeState.Stopped;\n\n    constructor(lifeMap: LifeMap) {\n        this._lifeMap = lifeMap;\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    onStart(cb: SimpleCallback) {\n        this._startCallbacks.push(cb);\n    }\n\n    onStop(cb: SimpleCallback) {\n        this._stopCallbacks.push(cb);\n    }\n\n    onRound(cb: SimpleCallback) {\n        this._roundCallbacks.push(cb);\n    }\n\n    stop() {\n        this._stopFlag = true;\n        this._state = GameOfLifeState.Stopping;\n    }\n\n    run() {\n        const onRoundComplete = (changesTable: CoordMatrix) => {\n            let changed = false;\n            for (const [keyX, yVector] of Object.entries(changesTable)) {\n                for (const [keyY, state] of Object.entries(yVector)) {\n                    this._lifeMap.isAlive(keyX, keyY, state);\n                    changed = true;\n                }\n            }\n\n            onNextTick(() => {\n                this._roundCallbacks.forEach(call);\n            });\n\n            if (!changed) {\n                this._state = GameOfLifeState.Completed;\n                onNextTick(() => {\n                    this._stopCallbacks.forEach(call);\n                });\n            } else if (this._stopFlag) {\n                this._state = GameOfLifeState.Stopped;\n                onNextTick(() => {\n                    this._stopCallbacks.forEach(call);\n                });\n            } else {\n                makeRound();\n            }\n        };\n\n        const makeRound = () => {\n            onNextTick(this._runRoundAsync, onRoundComplete);\n        };\n\n        this._stopFlag = false;\n        makeRound();\n\n        this._state = GameOfLifeState.Running;\n\n        onNextTick(() => {\n            this._startCallbacks.forEach(call);\n        });\n    }\n\n    private _runRoundAsync = (done: GeneralCallback<[CoordMatrix], void>) => {\n        const populated = this._lifeMap.populatedRect;\n        const changesTable = obj() as CoordMatrix;\n\n        const walkByColumn = (bigI: bigint) => {\n            let bigJ = populated.left;\n            makeStep();\n\n            function makeStep() {\n                handleCell(bigI, bigJ);\n                ++bigJ;\n                if (bigJ <= populated.right) {\n                    makeStep();\n                } else {\n                    ++bigI;\n                    if (bigI <= populated.bottom) {\n                        onNextTick(walkByColumn, bigI);\n                    } else {\n                        done(changesTable);\n                    }\n                }\n            }\n        };\n\n        const handleCell = (bigX: bigint, bigY: bigint) => {\n            const state = this._lifeMap.isAlive(bigX, bigY);\n            let aliveSiblings = 0;\n            for (let i = -1; i <= 1; ++i) {\n                for (let j = -1; j <= 1; ++j) {\n                    if (!(i === 0 && j === 0)) {\n                        const curI = bigX + BigInt(i);\n                        const curJ = bigY + BigInt(j);\n                        aliveSiblings += this._lifeMap.isAlive(curI, curJ) ? 1 : 0;\n                    }\n                }\n            }\n\n            const keyX = bigX.toString();\n            const keyY = bigY.toString();\n            if (state && !(aliveSiblings === 2 || aliveSiblings === 3)) {\n                changesTable[keyX] ??= obj() as CoordVector;\n                changesTable[keyX][keyY] = false;\n            } else if (!state && aliveSiblings === 3) {\n                changesTable[keyX] ??= obj() as CoordVector;\n                changesTable[keyX][keyY] = true;\n            }\n        };\n\n        onNextTick(walkByColumn, populated.top);\n    };\n}\n","import type {BigIntSrc, ErrorClass, GeneralCallback, SimpleCallback} from './common-types';\n\nexport class CustomError extends Error {\n    constructor(message?: string) {\n        super(message);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\n\nexport function obj(): unknown {\n    return Object.create(null);\n}\n\nexport function call(func: SimpleCallback) {\n    try {\n        func();\n    } catch (e) {\n        window.reportError(e);\n    }\n}\n\nexport function onNextTick<T extends unknown[], U>(cb: GeneralCallback<T, U>, ...args: T) {\n    setTimeout(() => cb(...args), 0);\n}\n\nexport function onPageReady(cb: SimpleCallback) {\n    function loadCb() {\n        onNextTick(cb);\n        document.removeEventListener('DOMContentLoaded', loadCb);\n        window.removeEventListener('load', loadCb);\n    }\n\n    if (document.readyState === 'interactive' || document.readyState === 'complete') {\n        return loadCb();\n    }\n\n    document.addEventListener('DOMContentLoaded', loadCb);\n    window.addEventListener('load', loadCb);\n}\n\nexport function throwError(errorMessage: string, ErrCls: ErrorClass = Error): never {\n    throw new ErrCls(errorMessage);\n}\n\nexport function createErrorThrower(ErrCls: ErrorClass) {\n    return function(errorMessage: string): never {\n        throwError(errorMessage, ErrCls);\n    };\n}\n\nexport function enterValueToInterval(val: BigIntSrc, max: BigIntSrc): bigint {\n    let res = BigInt(val);\n    const bigMax = BigInt(max);\n    if (res < 0n) {\n        res = bigMax + res;\n    } else if (res >= bigMax) {\n        res = res % bigMax;\n    }\n    return res;\n}\n","import type {O} from 'ts-toolbelt';\nimport type {BigIntSrc, SimpleCallback, Stringable} from './common-types';\nimport {call, CustomError, enterValueToInterval, obj} from './utils';\n\nexport interface PopulatedRect {\n    top: bigint;\n    right: bigint;\n    bottom: bigint;\n    left: bigint;\n}\n\nexport type CoordVector = Record<string, boolean | undefined>;\nexport type CoordMatrix = Record<string, CoordVector>;\n\nexport class LifeMapError extends CustomError {}\n\nexport class LifeMap {\n    public static readonly POPULATED_DELTA = 30n;\n\n    private _container: CoordMatrix;\n    private _width: bigint;\n    private _height: bigint;\n    private _minX: bigint;\n    private _maxX: bigint;\n    private _minY: bigint;\n    private _maxY: bigint;\n    private _changeListeners: SimpleCallback[];\n\n    constructor(mapWidth: BigIntSrc, mapHeight: BigIntSrc) {\n        this._container = obj() as CoordMatrix;\n\n        this._width = BigInt(mapWidth);\n        this._height = BigInt(mapHeight);\n\n        this._minX = this._height - 1n;\n        this._maxX = 0n;\n        this._minY = this._width - 1n;\n        this._maxY = 0n;\n        this._changeListeners = [];\n    }\n\n    get width(): bigint {\n        return this._width;\n    }\n\n    get height(): bigint {\n        return this._height;\n    }\n\n    get populatedRect(): PopulatedRect {\n        return {\n            left: this._minX,\n            right: this._maxX,\n            top: this._minY,\n            bottom: this._maxY,\n        };\n    }\n\n    get container(): O.Readonly<CoordMatrix> {\n        return this._container;\n    }\n\n    isAlive(x: BigIntSrc, y: BigIntSrc, status?: boolean) {\n        const bigX = enterValueToInterval(x, this._width);\n        const bigY = enterValueToInterval(y, this._height);\n\n        if (status !== undefined) {\n            this._setStatusToContainer(bigX, bigY, status);\n        }\n\n        const keyX = bigX.toString();\n        const keyY = bigY.toString();\n\n        return Boolean(this._container[keyX]?.[keyY]);\n    }\n\n    addChangeListener(listener: SimpleCallback) {\n        if (this._changeListeners.indexOf(listener) === -1) {\n            this._changeListeners.push(listener);\n        }\n    }\n\n    serialize(): string {\n        const data: Stringable[] = [this._width, this._height, this._minX, this._maxX, this._minY, this._maxY];\n\n        const coords: string[] = [];\n        for (const [keyX, vector] of Object.entries(this._container)) {\n            coords.push(`${keyX}:${Object.keys(vector).join(',')}`);\n        }\n        data.push(coords.join('|'));\n\n        return data.join(';');\n    }\n\n    loadSerializedState(dump: string) {\n        const data = dump.split(';');\n        if (data.length < 7) {\n            throw new LifeMapError('Invalid save data length');\n        }\n\n        this._width = BigInt(data[0]);\n        this._height = BigInt(data[1]);\n        this._minX = BigInt(data[2]);\n        this._maxX = BigInt(data[3]);\n        this._minY = BigInt(data[4]);\n        this._maxY = BigInt(data[5]);\n\n        const container = obj() as CoordMatrix;\n        for (const coordData of data[6].split('|')) {\n            const [keyX, yStr] = coordData.split(':');\n            container[keyX] = obj() as CoordVector;\n\n            for (const keyY of yStr.split(',')) {\n                container[keyX][keyY] = true;\n            }\n        }\n        this._container = container;\n\n        this._changeListeners.forEach(call);\n    }\n\n    private _setStatusToContainer(bigX: bigint, bigY: bigint, status: boolean) {\n        if (bigX >= this._width || bigX < 0n || bigY >= this._height || bigY < 0n) {\n            return;\n        }\n\n        const keyX = bigX.toString();\n        const keyY = bigY.toString();\n\n        if (status) {\n            this._container[keyX] ??= obj() as CoordVector;\n            this._container[keyX][keyY] = true;\n        } else if (!status && this._container[keyX]) {\n            delete this._container[keyX][keyY];\n            if (Object.keys(this._container[keyX]).length === 0) {\n                delete this._container[keyX];\n            }\n        }\n\n        if (!status) {\n            return;\n        }\n\n        if (bigX - LifeMap.POPULATED_DELTA < this._minX) {\n            this._minX = bigX - LifeMap.POPULATED_DELTA;\n            if (this._minX < 0n) {\n                this._minX = 0n;\n            }\n        }\n\n        if (bigX + LifeMap.POPULATED_DELTA > this._maxX) {\n            this._maxX = bigX + LifeMap.POPULATED_DELTA;\n            if (this._maxX >= this._width) {\n                this._maxX = this._width - 1n;\n            }\n        }\n\n        if (bigY - LifeMap.POPULATED_DELTA < this._minY) {\n            this._minY = bigY - LifeMap.POPULATED_DELTA;\n            if (this._minY < 0n) {\n                this._minY = 0n;\n            }\n        }\n\n        if (bigY + LifeMap.POPULATED_DELTA >= this._maxY) {\n            this._maxY = bigY + LifeMap.POPULATED_DELTA;\n            if (this._maxY >= this._height) {\n                this._maxY = this._height - 1n;\n            }\n        }\n    }\n}\n","import type {U} from 'ts-toolbelt';\nimport {LifeMap} from './life-map';\nimport {createErrorThrower, CustomError} from './utils';\n\nexport class MapViewError extends CustomError {}\n\nconst thr = createErrorThrower(MapViewError);\n\nexport enum MapViewState {\n    Initial = 'Initial',\n    Rendered = 'Rendered',\n    Input = 'Input',\n    Life = 'Life',\n}\n\nexport class MapView {\n    public static readonly CELL_WIDTH = 10;\n    public static readonly CELL_HEIGHT = 10;\n\n    private _state: MapViewState = MapViewState.Initial;\n\n    private readonly _canvas: HTMLCanvasElement;\n    private readonly _canvasRect: DOMRect;\n    private readonly _canvasWidth: number;\n    private readonly _canvasHeight: number;\n\n    private readonly _ctx: CanvasRenderingContext2D;\n    private readonly _lifeMap: LifeMap;\n    private _cellsByHorizontal = 0;\n    private _cellsByVertical = 0;\n    private _cellsHorizontalOffset = 0n;\n    private _cellsVerticalOffset = 0n;\n    private _curFrameRequest: U.Nullable<number> = null;\n\n    constructor(lifeMap: LifeMap) {\n        this._lifeMap = lifeMap;\n\n        this._canvas = document.getElementById('map') as U.Nullable<HTMLCanvasElement> ?? thr('Canvas not found');\n        this._canvasRect = this._canvas.getBoundingClientRect();\n        this._canvasWidth = this._canvas.clientWidth;\n        this._canvasHeight = this._canvas.clientHeight;\n\n        this._ctx = this._canvas.getContext('2d') ?? thr('Failed to create context');\n        this._ctx.fillStyle = '#708090';\n        this._ctx.strokeStyle = '#e6e6fa';\n\n        this._initMapData();\n        this._lifeMap.addChangeListener(() => {\n            this._initMapData();\n            this.render();\n        });\n    }\n\n    render = () => {\n        this._ctx.clearRect(0, 0, this._canvasWidth, this._canvasHeight);\n\n        let i = this._cellsVerticalOffset;\n        const M = i + BigInt(this._cellsByVertical);\n        for (; i < M; ++i) {\n            let j = this._cellsHorizontalOffset;\n            const N = j + BigInt(this._cellsByHorizontal);\n            for (; j < N; ++j) {\n                this._setCellState(i, j, this._lifeMap.isAlive(i, j));\n            }\n        }\n\n        if (this._state !== MapViewState.Input) {\n            this._state = MapViewState.Rendered;\n        }\n    };\n\n    renderWhenFrame = () => {\n        if (this._curFrameRequest) {\n            cancelAnimationFrame(this._curFrameRequest);\n            console.warn('Skip render frame');\n        }\n\n        this._curFrameRequest = requestAnimationFrame(() => {\n            this._curFrameRequest = null;\n            this.render();\n        });\n    };\n\n    beginInput = () => {\n        if (this._state !== MapViewState.Rendered) {\n            throw new Error('Input is not available');\n        }\n        this._state = MapViewState.Input;\n        this._canvas.addEventListener('click', this._inputListener);\n    };\n\n    endInput = () => {\n        if (this._state !== MapViewState.Input) {\n            throw new MapViewError('Input is not available');\n        }\n        this._state = MapViewState.Rendered;\n        this._canvas.removeEventListener('click', this._inputListener);\n    };\n\n    private _initMapData() {\n        this._cellsByHorizontal = Math.floor(this._canvasWidth / MapView.CELL_WIDTH);\n        if (this._cellsByHorizontal > this._lifeMap.width) {\n            throw new MapViewError('Map width is too low');\n        }\n\n        this._cellsByVertical = Math.floor(this._canvasHeight / MapView.CELL_HEIGHT);\n        if (this._cellsByVertical > this._lifeMap.height) {\n            throw new MapViewError('Map height is too low');\n        }\n\n        this._cellsHorizontalOffset = (this._lifeMap.width - BigInt(this._cellsByHorizontal)) / 2n;\n        this._cellsVerticalOffset = (this._lifeMap.height - BigInt(this._cellsByVertical)) / 2n;\n    }\n\n    private _inputListener = (event: MouseEvent) => {\n        if (this._state !== MapViewState.Input) {\n            throw new MapViewError('The map not into INPUT state');\n        }\n        const cell = this._getCellByClientCoordinates(event.clientX, event.clientY);\n        this._toggleCellState(cell.top, cell.left);\n    };\n\n    private _getCellByClientCoordinates(clientX: number, clientY: number) {\n        const curVerticalOffset = BigInt(Math.trunc((clientY - this._canvasRect.top) / MapView.CELL_HEIGHT));\n        const curHorizontalOffset = BigInt(Math.trunc((clientX - this._canvasRect.left) / MapView.CELL_WIDTH));\n        return {\n            top: this._cellsVerticalOffset + curVerticalOffset,\n            left: this._cellsHorizontalOffset + curHorizontalOffset,\n        };\n    }\n\n    private _toggleCellState(i: bigint, j: bigint) {\n        const isAlive = !this._lifeMap.isAlive(i, j);\n        this._setCellState(i, j, isAlive);\n    }\n\n    private _setCellState(i: bigint, j: bigint, isAlive: boolean) {\n        this._lifeMap.isAlive(i, j, isAlive);\n        const x = Number(j - this._cellsHorizontalOffset) * MapView.CELL_WIDTH;\n        const y = Number(i - this._cellsVerticalOffset) * MapView.CELL_HEIGHT;\n        if (isAlive) {\n            this._ctx.fillRect(x, y, MapView.CELL_WIDTH, MapView.CELL_HEIGHT);\n        } else {\n            this._ctx.clearRect(x, y, MapView.CELL_WIDTH, MapView.CELL_HEIGHT);\n            this._ctx.strokeRect(x, y, MapView.CELL_WIDTH, MapView.CELL_HEIGHT);\n        }\n    }\n}\n","export class MessagesView {\n    public static readonly LIFE_TIME = 10000;\n\n    private readonly _container: HTMLDivElement;\n\n    constructor() {\n        this._container = document.createElement('div');\n        this._container.className = 'messages-container';\n        document.body.appendChild(this._container);\n    }\n\n    showMessage(message: string, className?: string) {\n        className = className ?? 'info';\n\n        const block = document.createElement('div');\n        const closeButton = document.createElement('span');\n\n        block.classList.add('message');\n        block.classList.add(className);\n        block.innerHTML = message;\n        closeButton.className = 'close';\n        closeButton.innerHTML = '&times;';\n\n        block.appendChild(closeButton);\n        this._container.appendChild(block);\n\n        const closeMessage = () => {\n            this._container.removeChild(block);\n            closeButton.onclick = null;\n        };\n        const closeTimeout = setTimeout(closeMessage, MessagesView.LIFE_TIME);\n\n        closeButton.onclick = function() {\n            clearTimeout(closeTimeout);\n            closeMessage();\n            return false;\n        };\n    }\n\n    showError(message: string) {\n        this.showMessage(message, 'error');\n    }\n\n    bindToErrors() {\n        window.addEventListener('error', (event: ErrorEvent) => {\n            this.showError(`An error has occurred: ${event.error}`);\n        });\n\n        window.addEventListener('unhandledrejection', (event: PromiseRejectionEvent) => {\n            this.showError(`An error has occurred: ${event.reason}`);\n        });\n    }\n}\n","import type {U} from 'ts-toolbelt';\nimport {LifeMap} from './life-map';\n\nexport class SaveGameController {\n    private _lifeMap: LifeMap;\n\n    constructor(lifeMap: LifeMap) {\n        this._lifeMap = lifeMap;\n    }\n\n    save() {\n        window.localStorage.save = this._lifeMap.serialize();\n    }\n\n    load() {\n        if (this.doesSaveExist()) {\n            const dump = window.localStorage.save as string;\n            this._lifeMap.loadSerializedState(dump);\n        }\n    }\n\n    doesSaveExist() {\n        const dump = window.localStorage.save as U.Nullable<string>;\n        return Boolean(dump);\n    }\n}\n"],"names":["$6e33178611e38e36$export$f2555f7082964729","$4178208286d7fe59$export$e83a796c10cd0c8d","GameOfLifeState","MapViewState","$04410b3b959a494a$export$f7a70f5f17339408","Error","constructor","message","name","captureStackTrace","$04410b3b959a494a$export$d29f2533ab4f8bcf","Object","create","$04410b3b959a494a$export$848feb93d8f32b9b","func","e","window","reportError","$04410b3b959a494a$export$8b1ffc2729584f1c","cb","args","setTimeout","$04410b3b959a494a$export$1a59691a1efaf7b9","ErrCls","errorMessage","$04410b3b959a494a$export$8bf7aba4a9e09055","$04410b3b959a494a$export$c12749b4e5ec3bbb","val","max","res","BigInt","bigMax","$6e33178611e38e36$export$8981e2cb2c3fa123","lifeMap","_stopFlag","_startCallbacks","_stopCallbacks","_roundCallbacks","_state","Stopped","_runRoundAsync","done","populated","_lifeMap","populatedRect","changesTable","walkByColumn","bigI","bigJ","left","makeStep","handleCell","right","bottom","bigX","bigY","state","isAlive","aliveSiblings","i","j","curI","curJ","keyX","toString","keyY","top","onStart","push","onStop","onRound","stop","Stopping","run","onRoundComplete","changed","yVector","entries","forEach","makeRound","Completed","Running","$9935fb0976009b53$var$thr","$9935fb0976009b53$export$73d419e4fd660e9b","game","saveGameController","messagesView","_game","_saveGameController","_messagesView","_startButton","document","getElementById","_stopButton","_saveButton","_loadButton","init","setAttribute","removeAttribute","doesSaveExist","showMessage","onclick","save","load","$f22807430230dcbd$export$3f79031f6bd0d508","$f22807430230dcbd$export$ed3ad1bc61bbbf61","mapWidth","mapHeight","_container","_width","_height","_minX","_maxX","_minY","_maxY","_changeListeners","width","height","container","x","y","status","undefined","_setStatusToContainer","Boolean","addChangeListener","listener","indexOf","serialize","data","coords","vector","keys","join","loadSerializedState","dump","split","length","coordData","yStr","POPULATED_DELTA","$4178208286d7fe59$export$a660f75ebdcef0d9","$4178208286d7fe59$var$thr","$4178208286d7fe59$export$ab1e7a67d6ec5ad8","Initial","_cellsByHorizontal","_cellsByVertical","_cellsHorizontalOffset","_cellsVerticalOffset","_curFrameRequest","render","_ctx","clearRect","_canvasWidth","_canvasHeight","M","N","_setCellState","Input","Rendered","renderWhenFrame","cancelAnimationFrame","console","warn","requestAnimationFrame","beginInput","_canvas","addEventListener","_inputListener","endInput","removeEventListener","event","cell","_getCellByClientCoordinates","clientX","clientY","_toggleCellState","_canvasRect","getBoundingClientRect","clientWidth","clientHeight","getContext","fillStyle","strokeStyle","_initMapData","Math","floor","CELL_WIDTH","CELL_HEIGHT","curVerticalOffset","trunc","curHorizontalOffset","Number","fillRect","strokeRect","$054b22ee4f1298ef$export$ca6507f6a8b25a1d","createElement","className","body","appendChild","block","closeButton","classList","add","innerHTML","closeMessage","removeChild","closeTimeout","LIFE_TIME","clearTimeout","showError","bindToErrors","error","reason","$f2e1af450a1a0fc7$export$f3625401589af144","localStorage","loadCb","readyState","mapView","controlsView","log"],"version":3,"file":"index.8022ca1a.js.map"}