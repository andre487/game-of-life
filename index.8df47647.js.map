{"mappings":"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","sources":["<anon>","src/index.ts","src/controls-view.ts","src/game.ts","src/utils.ts","src/save-game-controller.ts","src/life-map.ts","src/map-view.ts","src/styles.ts","src/messages-view.ts"],"sourcesContent":["const $04410b3b959a494a$export$a3b296e0cf6c903d = $04410b3b959a494a$export$d29f2533ab4f8bcf();\nclass $04410b3b959a494a$export$f7a70f5f17339408 extends Error {\n    constructor(message){\n        super(message);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nfunction $04410b3b959a494a$export$d29f2533ab4f8bcf() {\n    return Object.create(null);\n}\nfunction $04410b3b959a494a$export$848feb93d8f32b9b(func) {\n    try {\n        func();\n    } catch (e) {\n        window.reportError(e);\n    }\n}\nfunction $04410b3b959a494a$export$8b1ffc2729584f1c(cb, ...args) {\n    setTimeout(()=>cb(...args), 0);\n}\nfunction $04410b3b959a494a$export$7cf43de860abed3c(cb) {\n    function loadCb() {\n        $04410b3b959a494a$export$8b1ffc2729584f1c(cb);\n        document.removeEventListener(\"DOMContentLoaded\", loadCb);\n        window.removeEventListener(\"load\", loadCb);\n    }\n    if (document.readyState === \"interactive\" || document.readyState === \"complete\") return loadCb();\n    document.addEventListener(\"DOMContentLoaded\", loadCb);\n    window.addEventListener(\"load\", loadCb);\n}\nfunction $04410b3b959a494a$export$8bf7aba4a9e09055(errorMessage, ErrCls = Error) {\n    throw new ErrCls(errorMessage);\n}\nfunction $04410b3b959a494a$export$1a59691a1efaf7b9(ErrCls) {\n    return function(errorMessage) {\n        $04410b3b959a494a$export$8bf7aba4a9e09055(errorMessage, ErrCls);\n    };\n}\nfunction $04410b3b959a494a$export$810b1114454c23e0(val, min, max) {\n    let res = val;\n    if (res < min) res = min;\n    if (res > max) res = max;\n    return res;\n}\nfunction $04410b3b959a494a$export$34ef6013e28b271b(a, b) {\n    const d = BigInt(a) - BigInt(b);\n    if (d > 0n) return 1;\n    if (d < 0n) return -1;\n    return 0;\n}\nfunction $04410b3b959a494a$export$de363e709c412c8a(func, time) {\n    let args = []; // 😿\n    let tm = null;\n    function callFn() {\n        try {\n            func(args);\n        } catch (e) {\n            window.reportError(e);\n        }\n        args = [];\n        tm = null;\n    }\n    return function throttled(arg) {\n        args.push(arg);\n        if (!tm) tm = setTimeout(callFn, time);\n    };\n}\nconst $04410b3b959a494a$export$7203b6f87333b9a2 = new Intl.NumberFormat(globalThis?.navigator?.language ?? \"en-US\");\n\n\nvar $6e33178611e38e36$export$f2555f7082964729;\n(function(GameOfLifeState) {\n    GameOfLifeState[\"Stopped\"] = \"Stopped\";\n    GameOfLifeState[\"Running\"] = \"Running\";\n    GameOfLifeState[\"Stopping\"] = \"Stopping\";\n    GameOfLifeState[\"Completed\"] = \"Completed\";\n})($6e33178611e38e36$export$f2555f7082964729 || ($6e33178611e38e36$export$f2555f7082964729 = {}));\nclass $6e33178611e38e36$export$8981e2cb2c3fa123 {\n    constructor(lifeMap){\n        this._stopFlag = false;\n        this._startCallbacks = [];\n        this._stopCallbacks = [];\n        this._roundCallbacks = [];\n        this._state = $6e33178611e38e36$export$f2555f7082964729.Stopped;\n        this._roundStartTime = 0;\n        this._runRoundAsync = (done)=>{\n            this._roundStartTime = Date.now();\n            const aliveLocs = this._lifeMap.getLifeLocalities();\n            const changesTable = (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)();\n            for (const [xVal, yVal] of aliveLocs){\n                const state = this._lifeMap.isAlive(xVal, yVal);\n                let aliveSiblings = 0;\n                for(let i = xVal - 1n; i <= xVal + 1n; ++i){\n                    for(let j = yVal - 1n; j <= yVal + 1n; ++j)if (!(i === xVal && j === yVal)) aliveSiblings += this._lifeMap.isAlive(i, j) ? 1 : 0;\n                }\n                if (state && !(aliveSiblings === 2 || aliveSiblings === 3)) (changesTable[xVal.toString()] ??= (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)())[yVal.toString()] = false;\n                else if (!state && aliveSiblings === 3) (changesTable[xVal.toString()] ??= (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)())[yVal.toString()] = true;\n            }\n            done(changesTable);\n        };\n        this._lifeMap = lifeMap;\n    }\n    get state() {\n        return this._state;\n    }\n    onStart(cb) {\n        this._startCallbacks.push(cb);\n    }\n    onStop(cb) {\n        this._stopCallbacks.push(cb);\n    }\n    onRound(cb) {\n        this._roundCallbacks.push(cb);\n    }\n    stop() {\n        this._stopFlag = true;\n        this._state = $6e33178611e38e36$export$f2555f7082964729.Stopping;\n    }\n    run() {\n        const onRoundComplete = (changesTable)=>{\n            let changed = false;\n            for (const [keyX, yVector] of Object.entries(changesTable))for (const [keyY, state] of Object.entries(yVector ?? (0, $04410b3b959a494a$export$a3b296e0cf6c903d))){\n                this._lifeMap.isAlive(keyX, keyY, state ?? false);\n                changed = true;\n            }\n            (0, $04410b3b959a494a$export$8b1ffc2729584f1c)(()=>{\n                this._roundCallbacks.forEach((0, $04410b3b959a494a$export$848feb93d8f32b9b));\n            });\n            if (!changed) {\n                this._state = $6e33178611e38e36$export$f2555f7082964729.Completed;\n                (0, $04410b3b959a494a$export$8b1ffc2729584f1c)(()=>{\n                    this._stopCallbacks.forEach((0, $04410b3b959a494a$export$848feb93d8f32b9b));\n                });\n            } else if (this._stopFlag) {\n                this._state = $6e33178611e38e36$export$f2555f7082964729.Stopped;\n                (0, $04410b3b959a494a$export$8b1ffc2729584f1c)(()=>{\n                    this._stopCallbacks.forEach((0, $04410b3b959a494a$export$848feb93d8f32b9b));\n                });\n            } else makeRound();\n        };\n        const makeRound = ()=>{\n            const delta = $6e33178611e38e36$export$8981e2cb2c3fa123.ROUND_TIME - (Date.now() - this._roundStartTime);\n            setTimeout(()=>this._runRoundAsync(onRoundComplete), delta);\n        };\n        this._stopFlag = false;\n        this._roundStartTime = Date.now();\n        makeRound();\n        this._state = $6e33178611e38e36$export$f2555f7082964729.Running;\n        (0, $04410b3b959a494a$export$8b1ffc2729584f1c)(()=>{\n            this._startCallbacks.forEach((0, $04410b3b959a494a$export$848feb93d8f32b9b));\n        });\n    }\n}\n$6e33178611e38e36$export$8981e2cb2c3fa123.ROUND_TIME = 250;\n\n\nclass $f2e1af450a1a0fc7$export$f3625401589af144 {\n    constructor(mapView){\n        this._mapView = mapView;\n    }\n    removeSave(saveName = $f2e1af450a1a0fc7$export$f3625401589af144.BUTTON_SAVE_NAME) {\n        delete localStorage[saveName];\n    }\n    save(saveName = $f2e1af450a1a0fc7$export$f3625401589af144.BUTTON_SAVE_NAME) {\n        window.localStorage[saveName] = this._mapView.getSaveString();\n    }\n    load(saveName = $f2e1af450a1a0fc7$export$f3625401589af144.BUTTON_SAVE_NAME) {\n        if (this.doesSaveExist(saveName)) {\n            const dump = window.localStorage[saveName];\n            this._mapView.loadSaveFromString(dump);\n        }\n    }\n    doesSaveExist(saveName = $f2e1af450a1a0fc7$export$f3625401589af144.BUTTON_SAVE_NAME) {\n        const dump = window.localStorage[saveName];\n        return Boolean(dump);\n    }\n}\n$f2e1af450a1a0fc7$export$f3625401589af144.BUTTON_SAVE_NAME = \"save\";\n$f2e1af450a1a0fc7$export$f3625401589af144.AUTO_SAVE_NAME = \"auto_save\";\n\n\n\nclass $9935fb0976009b53$export$4e5402614c278aa0 extends (0, $04410b3b959a494a$export$f7a70f5f17339408) {\n}\nconst $9935fb0976009b53$var$thr = (0, $04410b3b959a494a$export$1a59691a1efaf7b9)($9935fb0976009b53$export$4e5402614c278aa0);\nclass $9935fb0976009b53$export$73d419e4fd660e9b {\n    constructor(params){\n        this._disableAutosave = false;\n        this._lifeMap = params.lifeMap;\n        this._mapView = params.mapView;\n        this._game = params.game;\n        this._saveGameController = params.saveGameController;\n        this._messagesView = params.messagesView;\n        this._startButton = document.getElementById(\"start\") ?? $9935fb0976009b53$var$thr(\"Button not found\");\n        this._stopButton = document.getElementById(\"stop\") ?? $9935fb0976009b53$var$thr(\"Button not found\");\n        this._centerButton = document.getElementById(\"center\") ?? $9935fb0976009b53$var$thr(\"Button not found\");\n        this._noZoomButton = document.getElementById(\"no-zoom\") ?? $9935fb0976009b53$var$thr(\"Button not found\");\n        this._saveButton = document.getElementById(\"save\") ?? $9935fb0976009b53$var$thr(\"Button not found\");\n        this._loadButton = document.getElementById(\"load\") ?? $9935fb0976009b53$var$thr(\"Button not found\");\n        this._resetButton = document.getElementById(\"reset\") ?? $9935fb0976009b53$var$thr(\"Button not found\");\n        this._helpShowButton = document.getElementById(\"help-button\") ?? $9935fb0976009b53$var$thr(\"Button not found\");\n        this._helpCloseButton = document.getElementById(\"help__close\") ?? $9935fb0976009b53$var$thr(\"Button not found\");\n        this._helpBlock = document.getElementById(\"help\") ?? $9935fb0976009b53$var$thr(\"Help not found\");\n    }\n    init() {\n        window.addEventListener(\"click\", (e)=>{\n            if (e.target === this._resetButton) return;\n            this._disableAutosave = false;\n        });\n        this._game.onStart(()=>{\n            this._startButton.setAttribute(\"disabled\", \"\");\n            this._stopButton.removeAttribute(\"disabled\");\n            this._loadButton.setAttribute(\"disabled\", \"\");\n            this._resetButton.setAttribute(\"disabled\", \"\");\n        });\n        this._game.onStop(()=>{\n            this._stopButton.setAttribute(\"disabled\", \"\");\n            this._startButton.removeAttribute(\"disabled\");\n            if (this._saveGameController.doesSaveExist()) this._loadButton.removeAttribute(\"disabled\");\n            if (this._game.state === (0, $6e33178611e38e36$export$f2555f7082964729).Completed) this._messagesView.showMessage(\"The game is completed!\");\n            this._resetButton.removeAttribute(\"disabled\");\n        });\n        this._startButton.onclick = ()=>{\n            this._game.run();\n        };\n        this._stopButton.onclick = ()=>{\n            this._game.stop();\n        };\n        this._centerButton.onclick = ()=>{\n            this._mapView.moveToCenter();\n        };\n        this._noZoomButton.onclick = ()=>{\n            this._mapView.resetCellsSize();\n        };\n        this._saveButton.onclick = ()=>{\n            this._saveGameController.save();\n        };\n        this._loadButton.onclick = ()=>{\n            this._saveGameController.load();\n        };\n        if (this._saveGameController.doesSaveExist()) {\n            this._loadButton.removeAttribute(\"disabled\");\n            this._messagesView.showMessage(\"You have a saved game\");\n        }\n        this._resetButton.onclick = ()=>{\n            this._disableAutosave = true;\n            this._saveGameController.removeSave((0, $f2e1af450a1a0fc7$export$f3625401589af144).AUTO_SAVE_NAME);\n            window.location.reload();\n        };\n        this._helpShowButton.onclick = ()=>{\n            this._helpBlock.classList.remove(\"help_hidden\");\n        };\n        this._helpCloseButton.onclick = ()=>{\n            this._helpBlock.classList.add(\"help_hidden\");\n        };\n        window.addEventListener(\"beforeunload\", ()=>{\n            if (this._disableAutosave) return;\n            this._saveGameController.save((0, $f2e1af450a1a0fc7$export$f3625401589af144).AUTO_SAVE_NAME);\n        });\n        if (this._saveGameController.doesSaveExist((0, $f2e1af450a1a0fc7$export$f3625401589af144).AUTO_SAVE_NAME)) this._saveGameController.load((0, $f2e1af450a1a0fc7$export$f3625401589af144).AUTO_SAVE_NAME);\n    }\n}\n\n\n\n\nconst $f22807430230dcbd$export$5ee3d7a76ea08ff5 = 2n ** 20n;\nconst $f22807430230dcbd$export$9f90d91e5869b057 = 2n ** 64n;\nlet $f22807430230dcbd$export$cf15332af378c0c6 = $f22807430230dcbd$export$5ee3d7a76ea08ff5;\nif (window.location.href.search(/[?&]huge-universe=1(?:&|$)/) > -1) $f22807430230dcbd$export$cf15332af378c0c6 = $f22807430230dcbd$export$9f90d91e5869b057;\nclass $f22807430230dcbd$export$3f79031f6bd0d508 extends (0, $04410b3b959a494a$export$f7a70f5f17339408) {\n}\nfunction $f22807430230dcbd$export$d2899eefa4175145(a, b) {\n    const d = (0, $04410b3b959a494a$export$34ef6013e28b271b)(a[0], b[0]);\n    if (d) return d;\n    return (0, $04410b3b959a494a$export$34ef6013e28b271b)(a[1], b[1]);\n}\nclass $f22807430230dcbd$export$ed3ad1bc61bbbf61 {\n    constructor(mapWidth = $f22807430230dcbd$export$cf15332af378c0c6, mapHeight = $f22807430230dcbd$export$cf15332af378c0c6){\n        this._container = (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)();\n        this._width = 0n;\n        this._height = 0n;\n        this._minX = 0n;\n        this._maxX = 0n;\n        this._minY = 0n;\n        this._maxY = 0n;\n        this._changeListeners = [];\n        this._width = BigInt(mapWidth);\n        this._height = BigInt(mapHeight);\n        this.reset();\n    }\n    static stringifySaveData(data) {\n        return data.join(\";\");\n    }\n    static parseSaveString(dump) {\n        return dump.split(\";\");\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get populatedRect() {\n        return {\n            left: this._minX,\n            right: this._maxX,\n            top: this._minY,\n            bottom: this._maxY\n        };\n    }\n    get container() {\n        return this._container;\n    }\n    isAlive(x, y, status) {\n        x = BigInt(x);\n        y = BigInt(y);\n        if (x < 0n || x >= this._width || y < 0n || y >= this._height) return false;\n        if (status !== undefined) this._setStatusToContainer(x, y, status);\n        const keyX = x.toString();\n        const keyY = y.toString();\n        return Boolean(this._container[keyX]?.[keyY]);\n    }\n    getLifeLocalities() {\n        /* eslint-disable guard-for-in */ // About key iteration order: https://dev.to/frehner/the-order-of-js-object-keys-458d\n        const res = [];\n        const passedCache = new Map();\n        const container = this._container;\n        const mapWidth = this._width;\n        const mapHeight = this._height;\n        for(const xKey in container){\n            const xVal = BigInt(xKey);\n            for(const yKey in container[xKey]){\n                const yVal = BigInt(yKey);\n                for(let i = xVal - 1n; i <= xVal + 1n; ++i)for(let j = yVal - 1n; j <= yVal + 1n; ++j){\n                    if (passedCache.get(i)?.has(j) === true || i < 0n || i >= mapWidth || j < 0n || j >= mapHeight) continue;\n                    let curPassedLine = passedCache.get(i);\n                    if (!curPassedLine) {\n                        curPassedLine = new Set();\n                        passedCache.set(i, curPassedLine);\n                    }\n                    curPassedLine.add(j);\n                    res.push([\n                        i,\n                        j\n                    ]);\n                }\n            }\n        }\n        return res.sort($f22807430230dcbd$export$d2899eefa4175145);\n    }\n    addChangeListener(listener) {\n        if (this._changeListeners.indexOf(listener) === -1) this._changeListeners.push(listener);\n    }\n    reset() {\n        this._container = (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)();\n        this._minX = this._height - 1n;\n        this._maxX = 0n;\n        this._minY = this._width - 1n;\n        this._maxY = 0n;\n        this._changeListeners.forEach((0, $04410b3b959a494a$export$848feb93d8f32b9b));\n    }\n    getSaveData() {\n        const data = [\n            this._width,\n            this._height,\n            this._minX,\n            this._maxX,\n            this._minY,\n            this._maxY\n        ];\n        const coords = [];\n        for (const [keyX, vector] of Object.entries(this._container))coords.push(`${keyX}:${Object.keys(vector ?? (0, $04410b3b959a494a$export$a3b296e0cf6c903d)).join(\",\")}`);\n        data.push(coords.join(\"|\"));\n        return data;\n    }\n    loadSaveData(data) {\n        if (data.length < 7) throw new $f22807430230dcbd$export$3f79031f6bd0d508(\"Invalid save data length\");\n        this._width = BigInt(data[0]);\n        this._height = BigInt(data[1]);\n        this._minX = BigInt(data[2]);\n        this._maxX = BigInt(data[3]);\n        this._minY = BigInt(data[4]);\n        this._maxY = BigInt(data[5]);\n        const container = this._container = (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)();\n        for (const coordData of data[6].split(\"|\")){\n            const [keyX, yStr] = coordData.split(\":\");\n            if (!keyX || !yStr) continue;\n            const xVector = container[keyX] = (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)();\n            for (const keyY of yStr.split(\",\"))xVector[keyY] = true;\n        }\n    }\n    _setStatusToContainer(bigX, bigY, status) {\n        const keyX = bigX.toString();\n        const keyY = bigY.toString();\n        if (status) {\n            const xVector = this._container[keyX] ??= (0, $04410b3b959a494a$export$d29f2533ab4f8bcf)();\n            xVector[keyY] = true;\n        } else if (!status && this._container[keyX]) {\n            delete this._container[keyX]?.[keyY];\n            if (Object.keys(this._container[keyX] ?? (0, $04410b3b959a494a$export$a3b296e0cf6c903d)).length === 0) delete this._container[keyX];\n        }\n        if (!status) return;\n        if (bigX - $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA < this._minX) {\n            this._minX = bigX - $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA;\n            if (this._minX < 0n) this._minX = 0n;\n        }\n        if (bigX + $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA > this._maxX) {\n            this._maxX = bigX + $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA;\n            if (this._maxX >= this._width) this._maxX = this._width - 1n;\n        }\n        if (bigY - $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA < this._minY) {\n            this._minY = bigY - $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA;\n            if (this._minY < 0n) this._minY = 0n;\n        }\n        if (bigY + $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA >= this._maxY) {\n            this._maxY = bigY + $f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA;\n            if (this._maxY >= this._height) this._maxY = this._height - 1n;\n        }\n    }\n}\n$f22807430230dcbd$export$ed3ad1bc61bbbf61.POPULATED_DELTA = 30n;\n\n\n\nlet $71541114d7dd9aeb$var$darkTheme = false;\ntry {\n    if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) $71541114d7dd9aeb$var$darkTheme = true;\n} catch (e) {\n    window.reportError(e);\n}\nlet $71541114d7dd9aeb$var$gridFill = \"#616161\";\nlet $71541114d7dd9aeb$var$gridStroke = \"#bdbdbd\";\nlet $71541114d7dd9aeb$var$gridBorderColor = \"#fafafa\";\nif ($71541114d7dd9aeb$var$darkTheme) {\n    $71541114d7dd9aeb$var$gridFill = \"#bdbdbd\";\n    $71541114d7dd9aeb$var$gridStroke = \"#616161\";\n    $71541114d7dd9aeb$var$gridBorderColor = \"#000000\";\n}\nvar $71541114d7dd9aeb$export$2e2bcd8739ae039 = {\n    darkTheme: $71541114d7dd9aeb$var$darkTheme,\n    gridFill: $71541114d7dd9aeb$var$gridFill,\n    gridStroke: $71541114d7dd9aeb$var$gridStroke,\n    gridBorderColor: $71541114d7dd9aeb$var$gridBorderColor\n};\n\n\n\nclass $4178208286d7fe59$export$a660f75ebdcef0d9 extends (0, $04410b3b959a494a$export$f7a70f5f17339408) {\n}\nconst $4178208286d7fe59$var$thr = (0, $04410b3b959a494a$export$1a59691a1efaf7b9)($4178208286d7fe59$export$a660f75ebdcef0d9);\nvar $4178208286d7fe59$export$e83a796c10cd0c8d;\n(function(MapViewState) {\n    MapViewState[\"Initial\"] = \"Initial\";\n    MapViewState[\"Rendered\"] = \"Rendered\";\n    MapViewState[\"Input\"] = \"Input\";\n})($4178208286d7fe59$export$e83a796c10cd0c8d || ($4178208286d7fe59$export$e83a796c10cd0c8d = {}));\nclass $4178208286d7fe59$export$ab1e7a67d6ec5ad8 {\n    constructor(lifeMap){\n        this._state = $4178208286d7fe59$export$e83a796c10cd0c8d.Initial;\n        this._cellWidth = $4178208286d7fe59$export$ab1e7a67d6ec5ad8.DEFAULT_CELL_WIDTH;\n        this._cellHeight = $4178208286d7fe59$export$ab1e7a67d6ec5ad8.DEFAULT_CELL_HEIGHT;\n        this._cellsByHorizontal = 0;\n        this._cellsByVertical = 0;\n        this._cellsHorizontalOffset = 0n;\n        this._cellsVerticalOffset = 0n;\n        this._curFrameRequest = null;\n        this.render = ()=>{\n            this._ctx.clearRect(0, 0, this._canvasWidth, this._canvasHeight);\n            let i = this._cellsVerticalOffset;\n            const M = i + BigInt(this._cellsByVertical);\n            for(; i <= M; ++i){\n                let j = this._cellsHorizontalOffset;\n                const N = j + BigInt(this._cellsByHorizontal);\n                for(; j <= N; ++j)this._setCellState(i, j, this._lifeMap.isAlive(i, j));\n            }\n            if (this._state !== $4178208286d7fe59$export$e83a796c10cd0c8d.Input) this._state = $4178208286d7fe59$export$e83a796c10cd0c8d.Rendered;\n            this._xValue.innerHTML = (0, $04410b3b959a494a$export$7203b6f87333b9a2).format(this._cellsVerticalOffset);\n            this._yValue.innerHTML = (0, $04410b3b959a494a$export$7203b6f87333b9a2).format(this._cellsHorizontalOffset);\n            const populated = this._lifeMap.populatedRect;\n            this._popWidth.innerHTML = (0, $04410b3b959a494a$export$7203b6f87333b9a2).format((0, $04410b3b959a494a$export$810b1114454c23e0)(populated.right - populated.left, 0n, this._lifeMap.width));\n            this._popHeight.innerHTML = (0, $04410b3b959a494a$export$7203b6f87333b9a2).format((0, $04410b3b959a494a$export$810b1114454c23e0)(populated.bottom - populated.top, 0n, this._lifeMap.height));\n        };\n        this.moveBy = (deltaX, deltaY)=>{\n            this._cellsHorizontalOffset = (0, $04410b3b959a494a$export$810b1114454c23e0)(this._cellsHorizontalOffset + deltaX, 0n, this._lifeMap.width);\n            this._cellsVerticalOffset = (0, $04410b3b959a494a$export$810b1114454c23e0)(this._cellsVerticalOffset + deltaY, 0n, this._lifeMap.height);\n            this.renderWhenFrame();\n        };\n        this.moveToCenter = ()=>{\n            this._setCenterOffsets();\n            this.renderWhenFrame();\n        };\n        this.renderWhenFrame = ()=>{\n            if (this._curFrameRequest) return;\n            this._curFrameRequest = requestAnimationFrame(()=>{\n                this._curFrameRequest = null;\n                this.render();\n            });\n        };\n        this.beginInput = ()=>{\n            if (this._state !== $4178208286d7fe59$export$e83a796c10cd0c8d.Rendered) throw new Error(\"Input is not available\");\n            this._state = $4178208286d7fe59$export$e83a796c10cd0c8d.Input;\n            this._canvas.addEventListener(\"click\", this._inputListener);\n        };\n        this.endInput = ()=>{\n            if (this._state !== $4178208286d7fe59$export$e83a796c10cd0c8d.Input) throw new $4178208286d7fe59$export$a660f75ebdcef0d9(\"Input is not available\");\n            this._state = $4178208286d7fe59$export$e83a796c10cd0c8d.Rendered;\n            this._canvas.removeEventListener(\"click\", this._inputListener);\n        };\n        this._inputListener = (event)=>{\n            if (this._state !== $4178208286d7fe59$export$e83a796c10cd0c8d.Input) throw new $4178208286d7fe59$export$a660f75ebdcef0d9(\"The map not into INPUT state\");\n            const cell = this._getCellByClientCoordinates(event.clientX, event.clientY);\n            this._toggleCellState(cell.top, cell.left);\n        };\n        this._lifeMap = lifeMap;\n        this._canvas = document.getElementById(\"map\") ?? $4178208286d7fe59$var$thr(\"Canvas not found\");\n        this._canvasRect = this._canvas.getBoundingClientRect();\n        this._canvasWidth = this._canvas.clientWidth;\n        this._canvasHeight = this._canvas.clientHeight;\n        this._ctx = this._canvas.getContext(\"2d\") ?? $4178208286d7fe59$var$thr(\"Failed to create context\");\n        this._ctx.fillStyle = (0, $71541114d7dd9aeb$export$2e2bcd8739ae039).gridFill;\n        this._ctx.strokeStyle = (0, $71541114d7dd9aeb$export$2e2bcd8739ae039).gridStroke;\n        this._xValue = document.getElementById(\"map-params__item-x\") ?? $4178208286d7fe59$var$thr(\"No X value\");\n        this._yValue = document.getElementById(\"map-params__item-y\") ?? $4178208286d7fe59$var$thr(\"No Y value\");\n        this._popWidth = document.getElementById(\"map-params__item-populated-width\") ?? $4178208286d7fe59$var$thr(\"No pop width value\");\n        this._popHeight = document.getElementById(\"map-params__item-populated-height\") ?? $4178208286d7fe59$var$thr(\"No pop width value\");\n        this._initMapData();\n        this._lifeMap.addChangeListener(()=>{\n            this._initMapData();\n            this.renderWhenFrame();\n        });\n        new $4178208286d7fe59$var$MapViewNavigationHandler(this);\n    }\n    get canvas() {\n        return this._canvas;\n    }\n    get cellWidth() {\n        return this._cellWidth;\n    }\n    get cellHeight() {\n        return this._cellHeight;\n    }\n    getSaveString() {\n        const data = this._lifeMap.getSaveData();\n        data.push(this._cellWidth, this._cellHeight, this._cellsHorizontalOffset, this._cellsVerticalOffset);\n        return (0, $f22807430230dcbd$export$ed3ad1bc61bbbf61).stringifySaveData(data);\n    }\n    loadSaveFromString(dump) {\n        const data = (0, $f22807430230dcbd$export$ed3ad1bc61bbbf61).parseSaveString(dump);\n        this._lifeMap.loadSaveData(data);\n        if (data.length < 11) {\n            this._initMapData();\n            return this.renderWhenFrame();\n        }\n        this._cellWidth = parseInt(data[7]) || $4178208286d7fe59$export$ab1e7a67d6ec5ad8.DEFAULT_CELL_WIDTH;\n        this._cellHeight = parseInt(data[8]) || $4178208286d7fe59$export$ab1e7a67d6ec5ad8.DEFAULT_CELL_HEIGHT;\n        this._initMapData(false);\n        try {\n            this._cellsHorizontalOffset = BigInt(data[9]);\n            this._cellsVerticalOffset = BigInt(data[10]);\n        } catch (e) {\n            window.reportError(e);\n            this._setCenterOffsets();\n        }\n        this.renderWhenFrame();\n    }\n    resizeCellsBy(delta) {\n        const intDelta = Math.trunc(delta);\n        const newWidth = this._cellWidth + intDelta;\n        const newHeight = this._cellHeight + intDelta;\n        this.setCellsSizes(newWidth, newHeight);\n    }\n    resetCellsSize() {\n        this.setCellsSizes($4178208286d7fe59$export$ab1e7a67d6ec5ad8.DEFAULT_CELL_WIDTH, $4178208286d7fe59$export$ab1e7a67d6ec5ad8.DEFAULT_CELL_HEIGHT);\n    }\n    setCellsSizes(width, height) {\n        let changed = false;\n        if (this._cellWidth !== width && width >= $4178208286d7fe59$export$ab1e7a67d6ec5ad8.MIN_CELL_SIZE && width <= $4178208286d7fe59$export$ab1e7a67d6ec5ad8.MAX_CELL_SIZE) {\n            this._cellWidth = width;\n            changed = true;\n        }\n        if (this._cellHeight !== height && height >= $4178208286d7fe59$export$ab1e7a67d6ec5ad8.MIN_CELL_SIZE && height <= $4178208286d7fe59$export$ab1e7a67d6ec5ad8.MAX_CELL_SIZE) {\n            this._cellHeight = height;\n            changed = true;\n        }\n        if (changed) {\n            const oldCenterX = this._cellsHorizontalOffset + BigInt(this._cellsByHorizontal) / 2n;\n            const oldCenterY = this._cellsVerticalOffset + BigInt(this._cellsByVertical) / 2n;\n            this._initMapData();\n            this._cellsHorizontalOffset = oldCenterX - BigInt(this._cellsByHorizontal) / 2n;\n            this._cellsVerticalOffset = oldCenterY - BigInt(this._cellsByVertical) / 2n;\n            this.renderWhenFrame();\n        }\n    }\n    _initMapData(setCentralOffset = true) {\n        this._cellsByHorizontal = Math.floor(this._canvasWidth / this._cellWidth);\n        if (this._cellsByHorizontal > this._lifeMap.width) throw new $4178208286d7fe59$export$a660f75ebdcef0d9(\"Map width is too low\");\n        this._cellsByVertical = Math.floor(this._canvasHeight / this._cellHeight);\n        if (this._cellsByVertical > this._lifeMap.height) throw new $4178208286d7fe59$export$a660f75ebdcef0d9(\"Map height is too low\");\n        if (setCentralOffset) this._setCenterOffsets();\n    }\n    _setCenterOffsets() {\n        this._cellsHorizontalOffset = (this._lifeMap.width - BigInt(this._cellsByHorizontal)) / 2n;\n        this._cellsVerticalOffset = (this._lifeMap.height - BigInt(this._cellsByVertical)) / 2n;\n    }\n    _getCellByClientCoordinates(clientX, clientY) {\n        const curVerticalOffset = BigInt(Math.trunc((clientY - this._canvasRect.top) / this._cellHeight));\n        const curHorizontalOffset = BigInt(Math.trunc((clientX - this._canvasRect.left) / this._cellWidth));\n        return {\n            top: this._cellsVerticalOffset + curVerticalOffset,\n            left: this._cellsHorizontalOffset + curHorizontalOffset\n        };\n    }\n    _toggleCellState(i, j) {\n        const isAlive = !this._lifeMap.isAlive(i, j);\n        this._setCellState(i, j, isAlive);\n    }\n    _setCellState(i, j, isAlive) {\n        this._lifeMap.isAlive(i, j, isAlive);\n        const x = Number(j - this._cellsHorizontalOffset) * this._cellWidth;\n        const y = Number(i - this._cellsVerticalOffset) * this._cellHeight;\n        const ctx = this._ctx;\n        if (isAlive) {\n            ctx.fillRect(x, y, this._cellWidth, this._cellHeight);\n            const baseStrokeStyle = ctx.strokeStyle;\n            ctx.strokeStyle = (0, $71541114d7dd9aeb$export$2e2bcd8739ae039).gridBorderColor;\n            ctx.strokeRect(x, y, this._cellWidth, this._cellHeight);\n            ctx.strokeStyle = baseStrokeStyle;\n        } else {\n            ctx.clearRect(x, y, this._cellWidth, this._cellHeight);\n            ctx.strokeRect(x, y, this._cellWidth, this._cellHeight);\n        }\n    }\n}\n$4178208286d7fe59$export$ab1e7a67d6ec5ad8.DEFAULT_CELL_WIDTH = 12;\n$4178208286d7fe59$export$ab1e7a67d6ec5ad8.DEFAULT_CELL_HEIGHT = 12;\n$4178208286d7fe59$export$ab1e7a67d6ec5ad8.MIN_CELL_SIZE = 5;\n$4178208286d7fe59$export$ab1e7a67d6ec5ad8.MAX_CELL_SIZE = 22;\nclass $4178208286d7fe59$var$MapViewNavigationHandler {\n    constructor(mapView){\n        this._pointerLocked = false;\n        this._onScroll = (events)=>{\n            let deltaX = 0;\n            let deltaY = 0;\n            for (const event of events){\n                if (event.metaKey || event.ctrlKey) continue;\n                deltaX += event.deltaX;\n                deltaY += event.deltaY;\n            }\n            if (!deltaX && !deltaY) return;\n            const finalX = BigInt(Math.trunc(deltaX / this._mapView.cellWidth));\n            const finalY = BigInt(Math.trunc(deltaY / this._mapView.cellHeight));\n            if (finalX || finalY) this._mapView.moveBy(finalX, finalY);\n        };\n        this._onKey = (events)=>{\n            if (!this._pointerLocked) return;\n            let deltaX = 0;\n            let deltaY = 0;\n            let wasMod = false;\n            for (const e of events){\n                const action = $4178208286d7fe59$var$MapViewNavigationHandler.KEY_ACTIONS[e.code];\n                switch(action){\n                    case \"up\":\n                        deltaY += 1;\n                        break;\n                    case \"left\":\n                        deltaX += 1;\n                        break;\n                    case \"down\":\n                        deltaY -= 1;\n                        break;\n                    case \"right\":\n                        deltaX -= 1;\n                        break;\n                }\n                if (action && (e.metaKey || e.ctrlKey)) wasMod = true;\n            }\n            if (wasMod && (deltaX || deltaY)) {\n                let finalDelta = deltaX;\n                if (Math.abs(deltaY) > Math.abs(deltaX)) finalDelta = deltaY;\n                finalDelta = Math.round(finalDelta);\n                this._mapView.resizeCellsBy(-finalDelta);\n                return;\n            }\n            if (deltaX || deltaY) this._mapView.moveBy(BigInt(deltaX), BigInt(deltaY));\n        };\n        this._onZoom = (events)=>{\n            let deltaX = 0;\n            let deltaY = 0;\n            for (const event of events){\n                if (!event.metaKey && !event.ctrlKey) continue;\n                deltaX -= event.deltaX;\n                deltaY -= event.deltaY;\n            }\n            if (!deltaX && !deltaY) return;\n            let finalDelta = deltaX;\n            if (Math.abs(deltaY) > Math.abs(deltaX)) finalDelta = deltaY;\n            finalDelta = Math.round(finalDelta / 10);\n            this._mapView.resizeCellsBy(finalDelta);\n        };\n        this._lockPointer = ()=>{\n            this._pointerLocked = true;\n        };\n        this._unlockPointer = ()=>{\n            this._pointerLocked = false;\n        };\n        this._defaultPreventer = (e)=>{\n            if (!this._pointerLocked) return;\n            const isKey = e instanceof KeyboardEvent;\n            const isMouse = e instanceof MouseEvent;\n            if ((isKey || isMouse) && (e.shiftKey || e.altKey)) return;\n            if (isKey && (e.ctrlKey || e.metaKey) && (e.code === \"Digit0\" || e.code === \"Minus\" || e.code === \"Equal\")) return;\n            e.preventDefault();\n        };\n        this._mapView = mapView;\n        this._onScrollThrottled = (0, $04410b3b959a494a$export$de363e709c412c8a)(this._onScroll, $4178208286d7fe59$var$MapViewNavigationHandler.SCROLL_TIMEOUT);\n        this._onZoomThrottled = (0, $04410b3b959a494a$export$de363e709c412c8a)(this._onZoom, $4178208286d7fe59$var$MapViewNavigationHandler.ZOOM_TIMEOUT);\n        this._onKeyThrottled = (0, $04410b3b959a494a$export$de363e709c412c8a)(this._onKey, $4178208286d7fe59$var$MapViewNavigationHandler.KEY_TIMEOUT);\n        const canvas = this._mapView.canvas;\n        canvas.addEventListener(\"mousewheel\", this._onScrollThrottled);\n        canvas.addEventListener(\"mousewheel\", this._onZoomThrottled);\n        canvas.addEventListener(\"mouseenter\", this._lockPointer);\n        canvas.addEventListener(\"mouseleave\", this._unlockPointer);\n        canvas.addEventListener(\"mousewheel\", this._defaultPreventer);\n        window.addEventListener(\"keydown\", this._onKeyThrottled);\n        window.addEventListener(\"keydown\", this._defaultPreventer);\n    }\n}\n$4178208286d7fe59$var$MapViewNavigationHandler.SCROLL_TIMEOUT = 32;\n$4178208286d7fe59$var$MapViewNavigationHandler.KEY_TIMEOUT = 16;\n$4178208286d7fe59$var$MapViewNavigationHandler.ZOOM_TIMEOUT = 75;\n$4178208286d7fe59$var$MapViewNavigationHandler.KEY_ACTIONS = {\n    KeyW: \"up\",\n    KeyA: \"left\",\n    KeyS: \"down\",\n    KeyD: \"right\",\n    ArrowUp: \"up\",\n    ArrowLeft: \"left\",\n    ArrowDown: \"down\",\n    ArrowRight: \"right\",\n    __proto__: null\n};\n\n\nclass $054b22ee4f1298ef$export$ca6507f6a8b25a1d {\n    constructor(){\n        this._container = document.createElement(\"div\");\n        this._container.className = \"messages-container\";\n        document.body.appendChild(this._container);\n    }\n    showMessage(message, className) {\n        className = className ?? \"info\";\n        const block = document.createElement(\"div\");\n        const closeButton = document.createElement(\"span\");\n        block.classList.add(\"message\");\n        block.classList.add(className);\n        block.innerHTML = message;\n        closeButton.className = \"close\";\n        closeButton.innerHTML = \"&times;\";\n        block.appendChild(closeButton);\n        this._container.appendChild(block);\n        const closeMessage = ()=>{\n            this._container.removeChild(block);\n            closeButton.onclick = null;\n        };\n        const closeTimeout = setTimeout(closeMessage, $054b22ee4f1298ef$export$ca6507f6a8b25a1d.LIFE_TIME);\n        closeButton.onclick = function() {\n            clearTimeout(closeTimeout);\n            closeMessage();\n            return false;\n        };\n    }\n    showError(message) {\n        this.showMessage(message, \"error\");\n    }\n    bindToErrors() {\n        window.addEventListener(\"error\", (event)=>{\n            if (event.filename.startsWith(\"chrome\")) return;\n            this.showError(`An error has occurred: ${event.error}`);\n        });\n        window.addEventListener(\"unhandledrejection\", (event)=>{\n            this.showError(`An error has occurred: ${event.reason}`);\n        });\n    }\n}\n$054b22ee4f1298ef$export$ca6507f6a8b25a1d.LIFE_TIME = 10000;\n\n\n\n\n(0, $04410b3b959a494a$export$7cf43de860abed3c)(function() {\n    const messagesView = new (0, $054b22ee4f1298ef$export$ca6507f6a8b25a1d)();\n    messagesView.bindToErrors();\n    const lifeMap = new (0, $f22807430230dcbd$export$ed3ad1bc61bbbf61)();\n    const mapView = new (0, $4178208286d7fe59$export$ab1e7a67d6ec5ad8)(lifeMap);\n    const game = new (0, $6e33178611e38e36$export$8981e2cb2c3fa123)(lifeMap);\n    const saveGameController = new (0, $f2e1af450a1a0fc7$export$f3625401589af144)(mapView);\n    const controlsView = new (0, $9935fb0976009b53$export$73d419e4fd660e9b)({\n        lifeMap: lifeMap,\n        mapView: mapView,\n        game: game,\n        saveGameController: saveGameController,\n        messagesView: messagesView\n    });\n    game.onStart(mapView.endInput);\n    game.onStop(mapView.beginInput);\n    game.onRound(mapView.renderWhenFrame);\n    mapView.render();\n    mapView.beginInput();\n    controlsView.init();\n    console.log(\"Game is ready!\");\n    window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", ()=>{\n        window.location.reload();\n    });\n});\n\n\n//# sourceMappingURL=index.8df47647.js.map\n","import {ControlsView} from './controls-view';\nimport {GameOfLife} from './game';\nimport {LifeMap} from './life-map';\nimport {MapView} from './map-view';\nimport {MessagesView} from './messages-view';\nimport {SaveGameController} from './save-game-controller';\nimport {onPageReady} from './utils';\n\nonPageReady(function() {\n    const messagesView = new MessagesView();\n    messagesView.bindToErrors();\n\n    const lifeMap = new LifeMap();\n    const mapView = new MapView(lifeMap);\n    const game = new GameOfLife(lifeMap);\n    const saveGameController = new SaveGameController(mapView);\n    const controlsView = new ControlsView({\n        lifeMap,\n        mapView,\n        game,\n        saveGameController,\n        messagesView,\n    });\n\n    game.onStart(mapView.endInput);\n    game.onStop(mapView.beginInput);\n    game.onRound(mapView.renderWhenFrame);\n\n    mapView.render();\n    mapView.beginInput();\n    controlsView.init();\n\n    console.log('Game is ready!');\n\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {\n        window.location.reload();\n    });\n});\n","import type {U} from 'ts-toolbelt';\nimport {GameOfLife, GameOfLifeState} from './game';\nimport {LifeMap} from './life-map';\nimport {MapView} from './map-view';\nimport {MessagesView} from './messages-view';\nimport {SaveGameController} from './save-game-controller';\nimport {createErrorThrower, CustomError} from './utils';\n\nexport class ControlsViewError extends CustomError {}\n\nconst thr = createErrorThrower(ControlsViewError);\n\ntype MaybeButton = U.Nullable<HTMLButtonElement>;\n\nexport interface ControlsViewParams {\n    lifeMap: LifeMap;\n    mapView: MapView;\n    game: GameOfLife;\n    saveGameController: SaveGameController;\n    messagesView: MessagesView;\n}\n\nexport class ControlsView {\n    private _lifeMap: LifeMap;\n    private _mapView: MapView;\n    private _game: GameOfLife;\n    private _startButton: HTMLButtonElement;\n    private _stopButton: HTMLButtonElement;\n    private _centerButton: HTMLButtonElement;\n    private _noZoomButton: HTMLButtonElement;\n    private _saveButton: HTMLButtonElement;\n    private _loadButton: HTMLButtonElement;\n    private _saveGameController: SaveGameController;\n    private _messagesView: MessagesView;\n    private _resetButton: HTMLButtonElement;\n    private _helpShowButton: HTMLButtonElement;\n    private _helpCloseButton: HTMLButtonElement;\n    private _helpBlock: HTMLElement;\n\n    private _disableAutosave = false;\n\n    constructor(params: ControlsViewParams) {\n        this._lifeMap = params.lifeMap;\n        this._mapView = params.mapView;\n        this._game = params.game;\n        this._saveGameController = params.saveGameController;\n        this._messagesView = params.messagesView;\n\n        this._startButton = document.getElementById('start') as MaybeButton ?? thr('Button not found');\n        this._stopButton = document.getElementById('stop') as MaybeButton ?? thr('Button not found');\n        this._centerButton = document.getElementById('center') as MaybeButton ?? thr('Button not found');\n        this._noZoomButton = document.getElementById('no-zoom') as MaybeButton ?? thr('Button not found');\n        this._saveButton = document.getElementById('save') as MaybeButton ?? thr('Button not found');\n        this._loadButton = document.getElementById('load') as MaybeButton ?? thr('Button not found');\n        this._resetButton = document.getElementById('reset') as MaybeButton ?? thr('Button not found');\n\n        this._helpShowButton = document.getElementById('help-button') as MaybeButton ?? thr('Button not found');\n        this._helpCloseButton = document.getElementById('help__close') as MaybeButton ?? thr('Button not found');\n        this._helpBlock = document.getElementById('help') as U.Nullable<HTMLElement> ?? thr('Help not found');\n    }\n\n    init() {\n        window.addEventListener('click', (e) => {\n            if (e.target === this._resetButton) {\n                return;\n            }\n            this._disableAutosave = false;\n        });\n\n        this._game.onStart(() => {\n            this._startButton.setAttribute('disabled', '');\n            this._stopButton.removeAttribute('disabled');\n            this._loadButton.setAttribute('disabled', '');\n            this._resetButton.setAttribute('disabled', '');\n        });\n\n        this._game.onStop(() => {\n            this._stopButton.setAttribute('disabled', '');\n            this._startButton.removeAttribute('disabled');\n            if (this._saveGameController.doesSaveExist()) {\n                this._loadButton.removeAttribute('disabled');\n            }\n            if (this._game.state === GameOfLifeState.Completed) {\n                this._messagesView.showMessage('The game is completed!');\n            }\n            this._resetButton.removeAttribute('disabled');\n        });\n\n        this._startButton.onclick = () => {\n            this._game.run();\n        };\n\n        this._stopButton.onclick = () => {\n            this._game.stop();\n        };\n\n        this._centerButton.onclick = () => {\n            this._mapView.moveToCenter();\n        };\n\n        this._noZoomButton.onclick = () => {\n            this._mapView.resetCellsSize();\n        };\n\n        this._saveButton.onclick = () => {\n            this._saveGameController.save();\n        };\n\n        this._loadButton.onclick = () => {\n            this._saveGameController.load();\n        };\n\n        if (this._saveGameController.doesSaveExist()) {\n            this._loadButton.removeAttribute('disabled');\n            this._messagesView.showMessage('You have a saved game');\n        }\n\n        this._resetButton.onclick = () => {\n            this._disableAutosave = true;\n            this._saveGameController.removeSave(SaveGameController.AUTO_SAVE_NAME);\n            window.location.reload();\n        };\n\n        this._helpShowButton.onclick = () => {\n            this._helpBlock.classList.remove('help_hidden');\n        };\n\n        this._helpCloseButton.onclick = () => {\n            this._helpBlock.classList.add('help_hidden');\n        };\n\n        window.addEventListener('beforeunload', () => {\n            if (this._disableAutosave) {\n                return;\n            }\n            this._saveGameController.save(SaveGameController.AUTO_SAVE_NAME);\n        });\n\n        if (this._saveGameController.doesSaveExist(SaveGameController.AUTO_SAVE_NAME)) {\n            this._saveGameController.load(SaveGameController.AUTO_SAVE_NAME);\n        }\n    }\n}\n","import type {GeneralFn, SimpleFn} from './common-types';\nimport type {CoordMatrix} from './life-map';\nimport {LifeMap} from './life-map';\nimport {call, emptyHollowObj, obj, onNextTick} from './utils';\n\nexport enum GameOfLifeState {\n    Stopped = 'Stopped',\n    Running = 'Running',\n    Stopping = 'Stopping',\n    Completed = 'Completed',\n}\n\nexport class GameOfLife {\n    public static readonly ROUND_TIME = 250;\n\n    private _lifeMap: LifeMap;\n    private _stopFlag = false;\n    private _startCallbacks: SimpleFn[] = [];\n    private _stopCallbacks: SimpleFn[] = [];\n    private _roundCallbacks: SimpleFn[] = [];\n    private _state = GameOfLifeState.Stopped;\n    private _roundStartTime = 0;\n\n    constructor(lifeMap: LifeMap) {\n        this._lifeMap = lifeMap;\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    onStart(cb: SimpleFn) {\n        this._startCallbacks.push(cb);\n    }\n\n    onStop(cb: SimpleFn) {\n        this._stopCallbacks.push(cb);\n    }\n\n    onRound(cb: SimpleFn) {\n        this._roundCallbacks.push(cb);\n    }\n\n    stop() {\n        this._stopFlag = true;\n        this._state = GameOfLifeState.Stopping;\n    }\n\n    run() {\n        const onRoundComplete = (changesTable: CoordMatrix) => {\n            let changed = false;\n            for (const [keyX, yVector] of Object.entries(changesTable)) {\n                for (const [keyY, state] of Object.entries(yVector ?? emptyHollowObj)) {\n                    this._lifeMap.isAlive(keyX, keyY, state ?? false);\n                    changed = true;\n                }\n            }\n\n            onNextTick(() => {\n                this._roundCallbacks.forEach(call);\n            });\n\n            if (!changed) {\n                this._state = GameOfLifeState.Completed;\n                onNextTick(() => {\n                    this._stopCallbacks.forEach(call);\n                });\n            } else if (this._stopFlag) {\n                this._state = GameOfLifeState.Stopped;\n                onNextTick(() => {\n                    this._stopCallbacks.forEach(call);\n                });\n            } else {\n                makeRound();\n            }\n        };\n\n        const makeRound = () => {\n            const delta = GameOfLife.ROUND_TIME - (Date.now() - this._roundStartTime);\n            setTimeout(() => this._runRoundAsync(onRoundComplete), delta);\n        };\n\n        this._stopFlag = false;\n        this._roundStartTime = Date.now();\n        makeRound();\n\n        this._state = GameOfLifeState.Running;\n\n        onNextTick(() => {\n            this._startCallbacks.forEach(call);\n        });\n    }\n\n    private _runRoundAsync = (done: GeneralFn<[CoordMatrix], void>) => {\n        this._roundStartTime = Date.now();\n        const aliveLocs = this._lifeMap.getLifeLocalities();\n\n        const changesTable: CoordMatrix = obj();\n\n        for (const [xVal, yVal] of aliveLocs) {\n            const state = this._lifeMap.isAlive(xVal, yVal);\n\n            let aliveSiblings = 0;\n            for (let i = xVal - 1n; i <= xVal + 1n; ++i) {\n                for (let j = yVal - 1n; j <= yVal + 1n; ++j) {\n                    if (!(i === xVal && j === yVal)) {\n                        aliveSiblings += this._lifeMap.isAlive(i, j) ? 1 : 0;\n                    }\n                }\n            }\n\n            if (state && !(aliveSiblings === 2 || aliveSiblings === 3)) {\n                (changesTable[xVal.toString()] ??= obj())[yVal.toString()] = false;\n            } else if (!state && aliveSiblings === 3) {\n                (changesTable[xVal.toString()] ??= obj())[yVal.toString()] = true;\n            }\n        }\n\n        done(changesTable);\n    };\n}\n","import type {BigIntSrc, ErrorClass, ExtendableHollowObj, GeneralFn, SimpleFn} from './common-types';\n\nexport const emptyHollowObj: Readonly<ExtendableHollowObj<never>> = obj();\n\nexport class CustomError extends Error {\n    constructor(message?: string) {\n        super(message);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\n\nexport function obj<T>(): ExtendableHollowObj<T> {\n    return Object.create(null) as ExtendableHollowObj<T>;\n}\n\nexport function call(func: SimpleFn) {\n    try {\n        func();\n    } catch (e) {\n        window.reportError(e);\n    }\n}\n\nexport function onNextTick<T extends unknown[], U>(cb: GeneralFn<T, U>, ...args: T) {\n    setTimeout(() => cb(...args), 0);\n}\n\nexport function onPageReady(cb: SimpleFn) {\n    function loadCb() {\n        onNextTick(cb);\n        document.removeEventListener('DOMContentLoaded', loadCb);\n        window.removeEventListener('load', loadCb);\n    }\n\n    if (document.readyState === 'interactive' || document.readyState === 'complete') {\n        return loadCb();\n    }\n\n    document.addEventListener('DOMContentLoaded', loadCb);\n    window.addEventListener('load', loadCb);\n}\n\nexport function throwError(errorMessage: string, ErrCls: ErrorClass = Error): never {\n    throw new ErrCls(errorMessage);\n}\n\nexport function createErrorThrower(ErrCls: ErrorClass) {\n    return function(errorMessage: string): never {\n        throwError(errorMessage, ErrCls);\n    };\n}\n\nexport function bigIntMinMax(val: bigint, min: bigint, max: bigint): bigint {\n    let res = val;\n    if (res < min) {\n        res = min;\n    }\n    if (res > max) {\n        res = max;\n    }\n    return res;\n}\n\nexport function compareBigInts(a: BigIntSrc, b: BigIntSrc): number {\n    const d = BigInt(a) - BigInt(b);\n    if (d > 0n) {\n        return 1;\n    }\n    if (d < 0n) {\n        return -1;\n    }\n    return 0;\n}\n\ntype ThrottledFunction<T extends unknown[]> = GeneralFn<[T], void>;\ntype ThrottledArgType<T> = T extends (infer G)[] ? G : never;\ntype ThrottleResultFunction<T> = GeneralFn<[ThrottledArgType<T>], void>;\n\nexport function throttle<T extends unknown[]>(func: ThrottledFunction<T>, time: number): ThrottleResultFunction<T> {\n    let args: T = [] as unknown as T; // 😿\n    let tm: unknown = null;\n\n    function callFn() {\n        try {\n            func(args);\n        } catch (e) {\n            window.reportError(e);\n        }\n\n        args = [] as unknown as T;\n        tm = null;\n    }\n\n    return function throttled(arg: ThrottledArgType<T>): void {\n        args.push(arg);\n        if (!tm) {\n            tm = setTimeout(callFn, time);\n        }\n    };\n}\n\nexport const numberFormatter = new Intl.NumberFormat(globalThis?.navigator?.language ?? 'en-US');\n","import type {U} from 'ts-toolbelt';\nimport {MapView} from './map-view';\n\nexport class SaveGameController {\n    public static readonly BUTTON_SAVE_NAME = 'save';\n    public static readonly AUTO_SAVE_NAME = 'auto_save';\n\n    private _mapView: MapView;\n\n    constructor(mapView: MapView) {\n        this._mapView = mapView;\n    }\n\n    removeSave(saveName = SaveGameController.BUTTON_SAVE_NAME) {\n        delete localStorage[saveName];\n    }\n\n    save(saveName = SaveGameController.BUTTON_SAVE_NAME) {\n        window.localStorage[saveName] = this._mapView.getSaveString();\n    }\n\n    load(saveName = SaveGameController.BUTTON_SAVE_NAME) {\n        if (this.doesSaveExist(saveName)) {\n            const dump = window.localStorage[saveName] as string;\n            this._mapView.loadSaveFromString(dump);\n        }\n    }\n\n    doesSaveExist(saveName = SaveGameController.BUTTON_SAVE_NAME) {\n        const dump = window.localStorage[saveName] as U.Nullable<string>;\n        return Boolean(dump);\n    }\n}\n","import type {O} from 'ts-toolbelt';\nimport type {BigIntSrc, ExtendableHollowObj, SimpleFn, Stringable} from './common-types';\nimport {call, compareBigInts, CustomError, emptyHollowObj, obj} from './utils';\n\nexport interface PopulatedRect {\n    top: bigint;\n    right: bigint;\n    bottom: bigint;\n    left: bigint;\n}\n\nexport type CoordVector = ExtendableHollowObj<boolean>;\nexport type CoordMatrix = ExtendableHollowObj<CoordVector>;\n\nexport type LifePoint = [bigint, bigint];\nexport type LifeLocality = LifePoint;\n\nexport const DEFAULT_UNIVERSE_SIZE = 2n ** 20n;\nexport const HUGE_UNIVERSE_SIZE = 2n ** 64n;\nexport let universeSize = DEFAULT_UNIVERSE_SIZE;\nif (window.location.href.search(/[?&]huge-universe=1(?:&|$)/) > -1) {\n    universeSize = HUGE_UNIVERSE_SIZE;\n}\n\nexport class LifeMapError extends CustomError {}\n\nexport function compareLifePoints(a: LifePoint, b: LifePoint): number {\n    const d = compareBigInts(a[0], b[0]);\n    if (d) {\n        return d;\n    }\n    return compareBigInts(a[1], b[1]);\n}\n\nexport class LifeMap {\n    public static readonly POPULATED_DELTA = 30n;\n\n    private _container: CoordMatrix = obj();\n    private _width = 0n;\n    private _height = 0n;\n    private _minX = 0n;\n    private _maxX = 0n;\n    private _minY = 0n;\n    private _maxY = 0n;\n    private _changeListeners: SimpleFn[] = [];\n\n    constructor(mapWidth: BigIntSrc = universeSize, mapHeight: BigIntSrc = universeSize) {\n        this._width = BigInt(mapWidth);\n        this._height = BigInt(mapHeight);\n        this.reset();\n    }\n\n    static stringifySaveData(data: Stringable[]): string {\n        return data.join(';');\n    }\n\n    static parseSaveString(dump: string): string[] {\n        return dump.split(';');\n    }\n\n    get width(): bigint {\n        return this._width;\n    }\n\n    get height(): bigint {\n        return this._height;\n    }\n\n    get populatedRect(): PopulatedRect {\n        return {\n            left: this._minX,\n            right: this._maxX,\n            top: this._minY,\n            bottom: this._maxY,\n        };\n    }\n\n    get container(): O.Readonly<CoordMatrix> {\n        return this._container;\n    }\n\n    isAlive(x: BigIntSrc, y: BigIntSrc, status?: boolean) {\n        x = BigInt(x);\n        y = BigInt(y);\n\n        if (x < 0n || x >= this._width || y < 0n || y >= this._height) {\n            return false;\n        }\n\n        if (status !== undefined) {\n            this._setStatusToContainer(x, y, status);\n        }\n\n        const keyX = x.toString();\n        const keyY = y.toString();\n\n        return Boolean(this._container[keyX]?.[keyY]);\n    }\n\n    getLifeLocalities() {\n        /* eslint-disable guard-for-in */\n        // About key iteration order: https://dev.to/frehner/the-order-of-js-object-keys-458d\n        const res: LifeLocality[] = [];\n        const passedCache = new Map<bigint, Set<bigint>>();\n\n        const container = this._container;\n        const mapWidth = this._width;\n        const mapHeight = this._height;\n\n        for (const xKey in container) {\n            const xVal = BigInt(xKey);\n            for (const yKey in container[xKey]) {\n                const yVal = BigInt(yKey);\n                for (let i = xVal - 1n; i <= xVal + 1n; ++i) {\n                    for (let j = yVal - 1n; j <= yVal + 1n; ++j) {\n                        if (\n                            passedCache.get(i)?.has(j) === true ||\n                            i < 0n || i >= mapWidth || j < 0n || j >= mapHeight\n                        ) {\n                            continue;\n                        }\n\n                        let curPassedLine = passedCache.get(i);\n                        if (!curPassedLine) {\n                            curPassedLine = new Set();\n                            passedCache.set(i, curPassedLine);\n                        }\n                        curPassedLine.add(j);\n\n                        res.push([i, j]);\n                    }\n                }\n            }\n        }\n        return res.sort(compareLifePoints);\n    }\n\n    addChangeListener(listener: SimpleFn) {\n        if (this._changeListeners.indexOf(listener) === -1) {\n            this._changeListeners.push(listener);\n        }\n    }\n\n    reset() {\n        this._container = obj();\n        this._minX = this._height - 1n;\n        this._maxX = 0n;\n        this._minY = this._width - 1n;\n        this._maxY = 0n;\n\n        this._changeListeners.forEach(call);\n    }\n\n    getSaveData() {\n        const data: Stringable[] = [this._width, this._height, this._minX, this._maxX, this._minY, this._maxY];\n\n        const coords: string[] = [];\n        for (const [keyX, vector] of Object.entries(this._container)) {\n            coords.push(`${keyX}:${Object.keys(vector ?? emptyHollowObj).join(',')}`);\n        }\n        data.push(coords.join('|'));\n\n        return data;\n    }\n\n    loadSaveData(data: string[]) {\n        if (data.length < 7) {\n            throw new LifeMapError('Invalid save data length');\n        }\n\n        this._width = BigInt(data[0]);\n        this._height = BigInt(data[1]);\n        this._minX = BigInt(data[2]);\n        this._maxX = BigInt(data[3]);\n        this._minY = BigInt(data[4]);\n        this._maxY = BigInt(data[5]);\n\n        const container = this._container = obj();\n        for (const coordData of data[6].split('|')) {\n            const [keyX, yStr] = coordData.split(':');\n            if (!keyX || !yStr) {\n                continue;\n            }\n\n            const xVector = container[keyX] = obj();\n            for (const keyY of yStr.split(',')) {\n                xVector[keyY] = true;\n            }\n        }\n    }\n\n    private _setStatusToContainer(bigX: bigint, bigY: bigint, status: boolean) {\n        const keyX = bigX.toString();\n        const keyY = bigY.toString();\n\n        if (status) {\n            const xVector = this._container[keyX] ??= obj();\n            xVector[keyY] = true;\n        } else if (!status && this._container[keyX]) {\n            delete this._container[keyX]?.[keyY];\n            if (Object.keys(this._container[keyX] ?? emptyHollowObj).length === 0) {\n                delete this._container[keyX];\n            }\n        }\n\n        if (!status) {\n            return;\n        }\n\n        if (bigX - LifeMap.POPULATED_DELTA < this._minX) {\n            this._minX = bigX - LifeMap.POPULATED_DELTA;\n            if (this._minX < 0n) {\n                this._minX = 0n;\n            }\n        }\n\n        if (bigX + LifeMap.POPULATED_DELTA > this._maxX) {\n            this._maxX = bigX + LifeMap.POPULATED_DELTA;\n            if (this._maxX >= this._width) {\n                this._maxX = this._width - 1n;\n            }\n        }\n\n        if (bigY - LifeMap.POPULATED_DELTA < this._minY) {\n            this._minY = bigY - LifeMap.POPULATED_DELTA;\n            if (this._minY < 0n) {\n                this._minY = 0n;\n            }\n        }\n\n        if (bigY + LifeMap.POPULATED_DELTA >= this._maxY) {\n            this._maxY = bigY + LifeMap.POPULATED_DELTA;\n            if (this._maxY >= this._height) {\n                this._maxY = this._height - 1n;\n            }\n        }\n    }\n}\n","import type {U} from 'ts-toolbelt';\nimport type {ObjMap} from './common-types';\nimport {LifeMap} from './life-map';\nimport styles from './styles';\nimport {bigIntMinMax, createErrorThrower, CustomError, numberFormatter, throttle} from './utils';\n\nexport class MapViewError extends CustomError {}\n\nconst thr = createErrorThrower(MapViewError);\n\nexport enum MapViewState {\n    Initial = 'Initial',\n    Rendered = 'Rendered',\n    Input = 'Input',\n}\n\nexport class MapView {\n    public static readonly DEFAULT_CELL_WIDTH = 12;\n    public static readonly DEFAULT_CELL_HEIGHT = 12;\n    public static readonly MIN_CELL_SIZE = 5;\n    public static readonly MAX_CELL_SIZE = 22;\n\n    private _state: MapViewState = MapViewState.Initial;\n\n    private readonly _canvas: HTMLCanvasElement;\n    private readonly _canvasRect: DOMRect;\n    private readonly _canvasWidth: number;\n    private readonly _canvasHeight: number;\n\n    private _cellWidth = MapView.DEFAULT_CELL_WIDTH;\n    private _cellHeight = MapView.DEFAULT_CELL_HEIGHT;\n\n    private readonly _ctx: CanvasRenderingContext2D;\n    private readonly _lifeMap: LifeMap;\n    private _cellsByHorizontal = 0;\n    private _cellsByVertical = 0;\n    private _cellsHorizontalOffset = 0n;\n    private _cellsVerticalOffset = 0n;\n    private _curFrameRequest: U.Nullable<number> = null;\n    private _xValue: HTMLSpanElement;\n    private _yValue: HTMLSpanElement;\n    private _popWidth: HTMLSpanElement;\n    private _popHeight: HTMLSpanElement;\n\n    constructor(lifeMap: LifeMap) {\n        this._lifeMap = lifeMap;\n\n        this._canvas = document.getElementById('map') as U.Nullable<HTMLCanvasElement> ?? thr('Canvas not found');\n        this._canvasRect = this._canvas.getBoundingClientRect();\n        this._canvasWidth = this._canvas.clientWidth;\n        this._canvasHeight = this._canvas.clientHeight;\n\n        this._ctx = this._canvas.getContext('2d') ?? thr('Failed to create context');\n        this._ctx.fillStyle = styles.gridFill;\n        this._ctx.strokeStyle = styles.gridStroke;\n\n        this._xValue = document.getElementById('map-params__item-x') ?? thr('No X value');\n        this._yValue = document.getElementById('map-params__item-y') ?? thr('No Y value');\n        this._popWidth = document.getElementById('map-params__item-populated-width') ?? thr('No pop width value');\n        this._popHeight = document.getElementById('map-params__item-populated-height') ?? thr('No pop width value');\n\n        this._initMapData();\n        this._lifeMap.addChangeListener(() => {\n            this._initMapData();\n            this.renderWhenFrame();\n        });\n\n        new MapViewNavigationHandler(this);\n    }\n\n    get canvas() {\n        return this._canvas;\n    }\n\n    get cellWidth() {\n        return this._cellWidth;\n    }\n\n    get cellHeight() {\n        return this._cellHeight;\n    }\n\n    getSaveString() {\n        const data = this._lifeMap.getSaveData();\n        data.push(this._cellWidth, this._cellHeight, this._cellsHorizontalOffset, this._cellsVerticalOffset);\n        return LifeMap.stringifySaveData(data);\n    }\n\n    loadSaveFromString(dump: string) {\n        const data = LifeMap.parseSaveString(dump);\n        this._lifeMap.loadSaveData(data);\n        if (data.length < 11) {\n            this._initMapData();\n            return this.renderWhenFrame();\n        }\n\n        this._cellWidth = parseInt(data[7]) || MapView.DEFAULT_CELL_WIDTH;\n        this._cellHeight = parseInt(data[8]) || MapView.DEFAULT_CELL_HEIGHT;\n        this._initMapData(false);\n\n        try {\n            this._cellsHorizontalOffset = BigInt(data[9]);\n            this._cellsVerticalOffset = BigInt(data[10]);\n        } catch (e) {\n            window.reportError(e);\n            this._setCenterOffsets();\n        }\n\n        this.renderWhenFrame();\n    }\n\n    render = () => {\n        this._ctx.clearRect(0, 0, this._canvasWidth, this._canvasHeight);\n\n        let i = this._cellsVerticalOffset;\n        const M = i + BigInt(this._cellsByVertical);\n        for (; i <= M; ++i) {\n            let j = this._cellsHorizontalOffset;\n            const N = j + BigInt(this._cellsByHorizontal);\n            for (; j <= N; ++j) {\n                this._setCellState(i, j, this._lifeMap.isAlive(i, j));\n            }\n        }\n\n        if (this._state !== MapViewState.Input) {\n            this._state = MapViewState.Rendered;\n        }\n\n        this._xValue.innerHTML = numberFormatter.format(this._cellsVerticalOffset);\n        this._yValue.innerHTML = numberFormatter.format(this._cellsHorizontalOffset);\n\n        const populated = this._lifeMap.populatedRect;\n        this._popWidth.innerHTML = numberFormatter.format(\n            bigIntMinMax(populated.right - populated.left, 0n, this._lifeMap.width),\n        );\n        this._popHeight.innerHTML = numberFormatter.format(\n            bigIntMinMax(populated.bottom - populated.top, 0n, this._lifeMap.height),\n        );\n    };\n\n    moveBy = (deltaX: bigint, deltaY: bigint) => {\n        this._cellsHorizontalOffset = bigIntMinMax(this._cellsHorizontalOffset + deltaX, 0n, this._lifeMap.width);\n        this._cellsVerticalOffset = bigIntMinMax(this._cellsVerticalOffset + deltaY, 0n, this._lifeMap.height);\n        this.renderWhenFrame();\n    };\n\n    moveToCenter = () => {\n        this._setCenterOffsets();\n        this.renderWhenFrame();\n    };\n\n    resizeCellsBy(delta: number) {\n        const intDelta = Math.trunc(delta);\n        const newWidth = this._cellWidth + intDelta;\n        const newHeight = this._cellHeight + intDelta;\n        this.setCellsSizes(newWidth, newHeight);\n    }\n\n    resetCellsSize() {\n        this.setCellsSizes(MapView.DEFAULT_CELL_WIDTH, MapView.DEFAULT_CELL_HEIGHT);\n    }\n\n    setCellsSizes(width: number, height: number) {\n        let changed = false;\n\n        if (this._cellWidth !== width && width >= MapView.MIN_CELL_SIZE && width <= MapView.MAX_CELL_SIZE) {\n            this._cellWidth = width;\n            changed = true;\n        }\n\n        if (this._cellHeight !== height && height >= MapView.MIN_CELL_SIZE && height <= MapView.MAX_CELL_SIZE) {\n            this._cellHeight = height;\n            changed = true;\n        }\n\n        if (changed) {\n            const oldCenterX = this._cellsHorizontalOffset + BigInt(this._cellsByHorizontal) / 2n;\n            const oldCenterY = this._cellsVerticalOffset + BigInt(this._cellsByVertical) / 2n;\n\n            this._initMapData();\n\n            this._cellsHorizontalOffset = oldCenterX - BigInt(this._cellsByHorizontal) / 2n;\n            this._cellsVerticalOffset = oldCenterY - BigInt(this._cellsByVertical) / 2n;\n\n            this.renderWhenFrame();\n        }\n    }\n\n    renderWhenFrame = () => {\n        if (this._curFrameRequest) {\n            if (process.env.NODE_ENV === 'development') {\n                console.warn('Skip render frame');\n            }\n            return;\n        }\n\n        this._curFrameRequest = requestAnimationFrame(() => {\n            this._curFrameRequest = null;\n            this.render();\n        });\n    };\n\n    beginInput = () => {\n        if (this._state !== MapViewState.Rendered) {\n            throw new Error('Input is not available');\n        }\n        this._state = MapViewState.Input;\n        this._canvas.addEventListener('click', this._inputListener);\n    };\n\n    endInput = () => {\n        if (this._state !== MapViewState.Input) {\n            throw new MapViewError('Input is not available');\n        }\n        this._state = MapViewState.Rendered;\n        this._canvas.removeEventListener('click', this._inputListener);\n    };\n\n    private _initMapData(setCentralOffset = true) {\n        this._cellsByHorizontal = Math.floor(this._canvasWidth / this._cellWidth);\n        if (this._cellsByHorizontal > this._lifeMap.width) {\n            throw new MapViewError('Map width is too low');\n        }\n\n        this._cellsByVertical = Math.floor(this._canvasHeight / this._cellHeight);\n        if (this._cellsByVertical > this._lifeMap.height) {\n            throw new MapViewError('Map height is too low');\n        }\n\n        if (setCentralOffset) {\n            this._setCenterOffsets();\n        }\n    }\n\n    private _setCenterOffsets() {\n        this._cellsHorizontalOffset = (this._lifeMap.width - BigInt(this._cellsByHorizontal)) / 2n;\n        this._cellsVerticalOffset = (this._lifeMap.height - BigInt(this._cellsByVertical)) / 2n;\n    }\n\n    private _inputListener = (event: MouseEvent) => {\n        if (this._state !== MapViewState.Input) {\n            throw new MapViewError('The map not into INPUT state');\n        }\n        const cell = this._getCellByClientCoordinates(event.clientX, event.clientY);\n        this._toggleCellState(cell.top, cell.left);\n    };\n\n    private _getCellByClientCoordinates(clientX: number, clientY: number) {\n        const curVerticalOffset = BigInt(Math.trunc((clientY - this._canvasRect.top) / this._cellHeight));\n        const curHorizontalOffset = BigInt(Math.trunc((clientX - this._canvasRect.left) / this._cellWidth));\n        return {\n            top: this._cellsVerticalOffset + curVerticalOffset,\n            left: this._cellsHorizontalOffset + curHorizontalOffset,\n        };\n    }\n\n    private _toggleCellState(i: bigint, j: bigint) {\n        const isAlive = !this._lifeMap.isAlive(i, j);\n        this._setCellState(i, j, isAlive);\n    }\n\n    private _setCellState(i: bigint, j: bigint, isAlive: boolean) {\n        this._lifeMap.isAlive(i, j, isAlive);\n        const x = Number(j - this._cellsHorizontalOffset) * this._cellWidth;\n        const y = Number(i - this._cellsVerticalOffset) * this._cellHeight;\n\n        const ctx = this._ctx;\n        if (isAlive) {\n            ctx.fillRect(x, y, this._cellWidth, this._cellHeight);\n            const baseStrokeStyle = ctx.strokeStyle;\n            ctx.strokeStyle = styles.gridBorderColor;\n            ctx.strokeRect(x, y, this._cellWidth, this._cellHeight);\n            ctx.strokeStyle = baseStrokeStyle;\n        } else {\n            ctx.clearRect(x, y, this._cellWidth, this._cellHeight);\n            ctx.strokeRect(x, y, this._cellWidth, this._cellHeight);\n        }\n    }\n}\n\nclass MapViewNavigationHandler {\n    public static readonly SCROLL_TIMEOUT = 32;\n    public static readonly KEY_TIMEOUT = 16;\n    public static readonly ZOOM_TIMEOUT = 75;\n\n    public static readonly KEY_ACTIONS: ObjMap = {\n        KeyW: 'up',\n        KeyA: 'left',\n        KeyS: 'down',\n        KeyD: 'right',\n\n        ArrowUp: 'up',\n        ArrowLeft: 'left',\n        ArrowDown: 'down',\n        ArrowRight: 'right',\n\n        __proto__: null,\n    };\n\n    private _pointerLocked = false;\n\n    private readonly _mapView: MapView;\n\n    private readonly _onScrollThrottled: (e: WheelEvent) => void;\n    private readonly _onZoomThrottled: (arg: WheelEvent) => void;\n    private readonly _onKeyThrottled: (arg: KeyboardEvent) => void;\n\n    constructor(mapView: MapView) {\n        this._mapView = mapView;\n\n        this._onScrollThrottled = throttle(this._onScroll, MapViewNavigationHandler.SCROLL_TIMEOUT);\n        this._onZoomThrottled = throttle(this._onZoom, MapViewNavigationHandler.ZOOM_TIMEOUT);\n        this._onKeyThrottled = throttle(this._onKey, MapViewNavigationHandler.KEY_TIMEOUT);\n\n        const canvas = this._mapView.canvas;\n        canvas.addEventListener('mousewheel', this._onScrollThrottled as EventListener);\n        canvas.addEventListener('mousewheel', this._onZoomThrottled as EventListener);\n        canvas.addEventListener('mouseenter', this._lockPointer);\n        canvas.addEventListener('mouseleave', this._unlockPointer);\n        canvas.addEventListener('mousewheel', this._defaultPreventer);\n\n        window.addEventListener('keydown', this._onKeyThrottled as EventListener);\n        window.addEventListener('keydown', this._defaultPreventer);\n    }\n\n    private _onScroll = (events: WheelEvent[]) => {\n        let deltaX = 0;\n        let deltaY = 0;\n\n        for (const event of events) {\n            if (event.metaKey || event.ctrlKey) {\n                continue;\n            }\n            deltaX += event.deltaX;\n            deltaY += event.deltaY;\n        }\n\n        if (!deltaX && !deltaY) {\n            return;\n        }\n\n        const finalX = BigInt(Math.trunc(deltaX / this._mapView.cellWidth));\n        const finalY = BigInt(Math.trunc(deltaY / this._mapView.cellHeight));\n\n        if (finalX || finalY) {\n            this._mapView.moveBy(finalX, finalY);\n        }\n    };\n\n    private _onKey = (events: KeyboardEvent[]) => {\n        if (!this._pointerLocked) {\n            return;\n        }\n\n        let deltaX = 0;\n        let deltaY = 0;\n        let wasMod = false;\n\n        for (const e of events) {\n            const action = MapViewNavigationHandler.KEY_ACTIONS[e.code];\n            switch (action) {\n            case 'up':\n                deltaY += 1;\n                break;\n            case 'left':\n                deltaX += 1;\n                break;\n            case 'down':\n                deltaY -= 1;\n                break;\n            case 'right':\n                deltaX -= 1;\n                break;\n            }\n\n            if (action && (e.metaKey || e.ctrlKey)) {\n                wasMod = true;\n            }\n        }\n\n        if (wasMod && (deltaX || deltaY)) {\n            let finalDelta = deltaX;\n            if (Math.abs(deltaY) > Math.abs(deltaX)) {\n                finalDelta = deltaY;\n            }\n            finalDelta = Math.round(finalDelta);\n            this._mapView.resizeCellsBy(-finalDelta);\n            return;\n        }\n\n        if (deltaX || deltaY) {\n            this._mapView.moveBy(BigInt(deltaX), BigInt(deltaY));\n        }\n    };\n\n    private _onZoom = (events: WheelEvent[]) => {\n        let deltaX = 0;\n        let deltaY = 0;\n\n        for (const event of events) {\n            if (!event.metaKey && !event.ctrlKey) {\n                continue;\n            }\n            deltaX -= event.deltaX;\n            deltaY -= event.deltaY;\n        }\n\n        if (!deltaX && !deltaY) {\n            return;\n        }\n\n        let finalDelta = deltaX;\n        if (Math.abs(deltaY) > Math.abs(deltaX)) {\n            finalDelta = deltaY;\n        }\n        finalDelta = Math.round(finalDelta / 10);\n\n        this._mapView.resizeCellsBy(finalDelta);\n    };\n\n    private _lockPointer = () => {\n        this._pointerLocked = true;\n    };\n\n    private _unlockPointer = () => {\n        this._pointerLocked = false;\n    };\n\n    private _defaultPreventer = (e: Event) => {\n        if (!this._pointerLocked) {\n            return;\n        }\n\n        const isKey = e instanceof KeyboardEvent;\n        const isMouse = e instanceof MouseEvent;\n\n        if ((isKey || isMouse) && (e.shiftKey || e.altKey)) {\n            return;\n        }\n\n        if (\n            isKey && (e.ctrlKey || e.metaKey) &&\n            (e.code === 'Digit0' || e.code === 'Minus' || e.code === 'Equal')\n        ) {\n            return;\n        }\n\n        e.preventDefault();\n    };\n}\n","let darkTheme = false;\ntry {\n    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        darkTheme = true;\n    }\n} catch (e) {\n    window.reportError(e);\n}\n\nlet gridFill = '#616161';\nlet gridStroke = '#bdbdbd';\nlet gridBorderColor = '#fafafa';\n\nif (darkTheme) {\n    gridFill = '#bdbdbd';\n    gridStroke = '#616161';\n    gridBorderColor = '#000000';\n}\n\nexport default {\n    darkTheme,\n    gridFill,\n    gridStroke,\n    gridBorderColor,\n};\n","export class MessagesView {\n    public static readonly LIFE_TIME = 10000;\n\n    private readonly _container: HTMLDivElement;\n\n    constructor() {\n        this._container = document.createElement('div');\n        this._container.className = 'messages-container';\n        document.body.appendChild(this._container);\n    }\n\n    showMessage(message: string, className?: string) {\n        className = className ?? 'info';\n\n        const block = document.createElement('div');\n        const closeButton = document.createElement('span');\n\n        block.classList.add('message');\n        block.classList.add(className);\n        block.innerHTML = message;\n        closeButton.className = 'close';\n        closeButton.innerHTML = '&times;';\n\n        block.appendChild(closeButton);\n        this._container.appendChild(block);\n\n        const closeMessage = () => {\n            this._container.removeChild(block);\n            closeButton.onclick = null;\n        };\n        const closeTimeout = setTimeout(closeMessage, MessagesView.LIFE_TIME);\n\n        closeButton.onclick = function() {\n            clearTimeout(closeTimeout);\n            closeMessage();\n            return false;\n        };\n    }\n\n    showError(message: string) {\n        this.showMessage(message, 'error');\n    }\n\n    bindToErrors() {\n        window.addEventListener('error', (event: ErrorEvent) => {\n            if (event.filename.startsWith('chrome')) {\n                return;\n            }\n            this.showError(`An error has occurred: ${event.error}`);\n        });\n\n        window.addEventListener('unhandledrejection', (event: PromiseRejectionEvent) => {\n            this.showError(`An error has occurred: ${event.reason}`);\n        });\n    }\n}\n"],"names":["$04410b3b959a494a$export$a3b296e0cf6c903d","$04410b3b959a494a$export$d29f2533ab4f8bcf","$04410b3b959a494a$export$f7a70f5f17339408","Error","constructor","message","name","captureStackTrace","Object","create","$04410b3b959a494a$export$848feb93d8f32b9b","func","e","window","reportError","$04410b3b959a494a$export$8b1ffc2729584f1c","cb","args","setTimeout","$04410b3b959a494a$export$1a59691a1efaf7b9","ErrCls","errorMessage","$04410b3b959a494a$export$8bf7aba4a9e09055","$04410b3b959a494a$export$810b1114454c23e0","val","min","max","res","$04410b3b959a494a$export$34ef6013e28b271b","a","b","d","BigInt","$04410b3b959a494a$export$de363e709c412c8a","time","tm","callFn","arg","push","$04410b3b959a494a$export$7203b6f87333b9a2","Intl","NumberFormat","globalThis","navigator","language","GameOfLifeState","$6e33178611e38e36$export$f2555f7082964729","$6e33178611e38e36$export$8981e2cb2c3fa123","lifeMap","_stopFlag","_startCallbacks","_stopCallbacks","_roundCallbacks","_state","Stopped","_roundStartTime","_runRoundAsync","done","Date","now","aliveLocs","_lifeMap","getLifeLocalities","changesTable","xVal","yVal","state","isAlive","aliveSiblings","i","j","toString","onStart","onStop","onRound","stop","Stopping","run","onRoundComplete","changed","keyX","yVector","entries","keyY","forEach","makeRound","Completed","ROUND_TIME","Running","$f2e1af450a1a0fc7$export$f3625401589af144","mapView","_mapView","removeSave","saveName","BUTTON_SAVE_NAME","localStorage","save","getSaveString","load","doesSaveExist","dump","loadSaveFromString","Boolean","AUTO_SAVE_NAME","$9935fb0976009b53$var$thr","$9935fb0976009b53$export$73d419e4fd660e9b","params","_disableAutosave","_game","game","_saveGameController","saveGameController","_messagesView","messagesView","_startButton","document","getElementById","_stopButton","_centerButton","_noZoomButton","_saveButton","_loadButton","_resetButton","_helpShowButton","_helpCloseButton","_helpBlock","init","addEventListener","target","setAttribute","removeAttribute","showMessage","onclick","moveToCenter","resetCellsSize","location","reload","classList","remove","add","$f22807430230dcbd$export$cf15332af378c0c6","href","search","$f22807430230dcbd$export$3f79031f6bd0d508","$f22807430230dcbd$export$d2899eefa4175145","$f22807430230dcbd$export$ed3ad1bc61bbbf61","mapWidth","mapHeight","_container","_width","_height","_minX","_maxX","_minY","_maxY","_changeListeners","reset","stringifySaveData","data","join","parseSaveString","split","width","height","populatedRect","left","right","top","bottom","container","x","y","status","undefined","_setStatusToContainer","passedCache","Map","xKey","yKey","get","has","curPassedLine","Set","set","sort","addChangeListener","listener","indexOf","getSaveData","coords","vector","keys","loadSaveData","length","coordData","yStr","xVector","bigX","bigY","POPULATED_DELTA","$71541114d7dd9aeb$var$darkTheme","matchMedia","matches","$71541114d7dd9aeb$var$gridFill","$71541114d7dd9aeb$var$gridStroke","$71541114d7dd9aeb$var$gridBorderColor","MapViewState","$4178208286d7fe59$export$e83a796c10cd0c8d","$71541114d7dd9aeb$export$2e2bcd8739ae039","gridFill","gridStroke","gridBorderColor","$4178208286d7fe59$export$a660f75ebdcef0d9","$4178208286d7fe59$var$thr","$4178208286d7fe59$export$ab1e7a67d6ec5ad8","Initial","_cellWidth","DEFAULT_CELL_WIDTH","_cellHeight","DEFAULT_CELL_HEIGHT","_cellsByHorizontal","_cellsByVertical","_cellsHorizontalOffset","_cellsVerticalOffset","_curFrameRequest","render","_ctx","clearRect","_canvasWidth","_canvasHeight","M","N","_setCellState","Input","Rendered","_xValue","innerHTML","format","_yValue","populated","_popWidth","_popHeight","moveBy","deltaX","deltaY","renderWhenFrame","_setCenterOffsets","requestAnimationFrame","beginInput","_canvas","_inputListener","endInput","removeEventListener","event","cell","_getCellByClientCoordinates","clientX","clientY","_toggleCellState","_canvasRect","getBoundingClientRect","clientWidth","clientHeight","getContext","fillStyle","strokeStyle","_initMapData","$4178208286d7fe59$var$MapViewNavigationHandler","canvas","cellWidth","cellHeight","parseInt","resizeCellsBy","delta","intDelta","Math","trunc","newWidth","newHeight","setCellsSizes","MIN_CELL_SIZE","MAX_CELL_SIZE","oldCenterX","oldCenterY","setCentralOffset","floor","curVerticalOffset","curHorizontalOffset","Number","ctx","fillRect","baseStrokeStyle","strokeRect","_pointerLocked","_onScroll","events","metaKey","ctrlKey","finalX","finalY","_onKey","wasMod","action","KEY_ACTIONS","code","finalDelta","abs","round","_onZoom","_lockPointer","_unlockPointer","_defaultPreventer","isKey","KeyboardEvent","isMouse","MouseEvent","shiftKey","altKey","preventDefault","_onScrollThrottled","SCROLL_TIMEOUT","_onZoomThrottled","ZOOM_TIMEOUT","_onKeyThrottled","KEY_TIMEOUT","KeyW","KeyA","KeyS","KeyD","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","__proto__","$054b22ee4f1298ef$export$ca6507f6a8b25a1d","createElement","className","body","appendChild","block","closeButton","closeMessage","removeChild","closeTimeout","LIFE_TIME","clearTimeout","showError","bindToErrors","filename","startsWith","error","reason","loadCb","readyState","controlsView","console","log"],"version":3,"file":"index.8df47647.js.map"}